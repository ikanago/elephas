name: Test

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

env:
  CARGO_INCREMENTAL: 0

jobs:
  backend_test:
    runs-on: 'ubuntu-22.04'
    services:
      redis:
        image: 'redis:7.2.1'
        ports:
          - 6379:6379
      postgres:
        image: 'postgres:15.4'
        env:
          POSTGRES_DB: test
          POSTGRES_USER: ikanago
          POSTGRES_PASSWORD: password
          POSTGRES_INITDB_ARGS: '--encoding=UTF8'
        ports:
          - 5432:5432
    env:
      COOKIE_KEY: 'KuNBwnCNhJWdqlVLB2ZJ/1jrQtV3T82c4ds8NS+MIQ4wyVDah5cFbNVZzZrxw2PrvEEhWrZPrmgyvjSF6Qj9Vg=='
      HOST_NAME: 'localhost:3000'
      DATABASE_URL: 'postgresql://ikanago:password@localhost:5432/test'
      REDIS_URL: 'localhost:6379'
    defaults:
      run:
        shell: bash
        working-directory: backend

    steps:
      - uses: actions/checkout@v4

      - name: Cache dependencies
        # Skip on pull requests created by renovate because these PRs occupies the cache volume.
        if: github.actor != 'renovate[bot]'
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: backend -> target

      - name: Setup Postgresql
        run: psql ${DATABASE_URL} < ./migrations/20230222011102_init.sql

      - name: Build(test)
        run: cargo test --lib --verbose --release --no-run

      - name: Build and test
        run: |
          cargo build --locked --verbose --release
          cargo test --lib --verbose --release

      - name: Cache frontend dependencies
        if: github.actor != 'renovate[bot]'
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.cache/Cypress
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install frontend dependencies and build
        run: |
          npm ci
          npm run build
        working-directory: frontend

      - name: Check OpenAPI Spec is up to date
        run: |
          npm run schema
          # Just check schema.json, not schema.ts; schema.ts can be differed by formatter even it is up to date.
          diff=$(git diff -- ../schema.json)
          echo -n "$diff"
          # Without `-n`, `echo -n "$diff" | wc -l` is 1 even if `"$diff" is empty.`
          test $(echo -n "$diff" | wc -l) -eq 0
        working-directory: frontend

      - name: Install Playwright dependencies
        run: |
          npx playwright install --with-deps chrome

      - name: Run Playwright tests
        run: |
          npm run e2e
        working-directory: frontend

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  frontend_test:
    runs-on: 'ubuntu-22.04'
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v4

      - name: Cache dependencies
        if: github.actor != 'renovate[bot]'
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: |
          npm ci

      - name: check
        run: |
          npm run check

      - name: Build
        run: |
          npm run build
