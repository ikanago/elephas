<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="694" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="677.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="677.00"> </text><svg id="frames" x="10" width="1180" total_samples="3684"><g><title>app`sha2::sha256::soft::compress (1 samples, 0.03%)</title><rect x="0.0271%" y="357" width="0.0271%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="1"/><text x="0.2771%" y="367.50"></text></g><g><title>app`sqlx_core::postgres::connection::establish::_&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::establish::_{{closure}} (4 samples, 0.11%)</title><rect x="0.0271%" y="389" width="0.1086%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="4"/><text x="0.2771%" y="399.50"></text></g><g><title>app`sqlx_core::postgres::connection::sasl::authenticate::_{{closure}} (4 samples, 0.11%)</title><rect x="0.0271%" y="373" width="0.1086%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="4"/><text x="0.2771%" y="383.50"></text></g><g><title>app`sqlx_core::postgres::connection::sasl::hi (3 samples, 0.08%)</title><rect x="0.0543%" y="357" width="0.0814%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="3"/><text x="0.3043%" y="367.50"></text></g><g><title>app`sha2::sha256::soft::compress (3 samples, 0.08%)</title><rect x="0.0543%" y="341" width="0.0814%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="3"/><text x="0.3043%" y="351.50"></text></g><g><title>app`sqlx_core::pool::inner::PoolInner&lt;DB&gt;::connect::_{{closure}} (5 samples, 0.14%)</title><rect x="0.0271%" y="421" width="0.1357%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="5"/><text x="0.2771%" y="431.50"></text></g><g><title>app`&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.14%)</title><rect x="0.0271%" y="405" width="0.1357%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="5"/><text x="0.2771%" y="415.50"></text></g><g><title>app`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.03%)</title><rect x="0.1357%" y="389" width="0.0271%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="1"/><text x="0.3857%" y="399.50"></text></g><g><title>app`tokio::runtime::scheduler::current_thread::Context::enter (7 samples, 0.19%)</title><rect x="0.0000%" y="485" width="0.1900%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="7"/><text x="0.2500%" y="495.50"></text></g><g><title>app`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.19%)</title><rect x="0.0000%" y="469" width="0.1900%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="7"/><text x="0.2500%" y="479.50"></text></g><g><title>app`std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.19%)</title><rect x="0.0000%" y="453" width="0.1900%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="7"/><text x="0.2500%" y="463.50"></text></g><g><title>app`app::main::_{{closure}} (6 samples, 0.16%)</title><rect x="0.0271%" y="437" width="0.1629%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="6"/><text x="0.2771%" y="447.50"></text></g><g><title>app`sqlx_core::postgres::options::parse::_&lt;impl core::str::traits::FromStr for sqlx_core::postgres::options::PgConnectOptions&gt;::from_str (1 samples, 0.03%)</title><rect x="0.1629%" y="421" width="0.0271%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="1"/><text x="0.4129%" y="431.50"></text></g><g><title>app`url::ParseOptions::parse (1 samples, 0.03%)</title><rect x="0.1629%" y="405" width="0.0271%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="1"/><text x="0.4129%" y="415.50"></text></g><g><title>app`url::parser::Parser::parse_url (1 samples, 0.03%)</title><rect x="0.1629%" y="389" width="0.0271%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="1"/><text x="0.4129%" y="399.50"></text></g><g><title>app`url::parser::Parser::after_double_slash (1 samples, 0.03%)</title><rect x="0.1629%" y="373" width="0.0271%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="1"/><text x="0.4129%" y="383.50"></text></g><g><title>app`url::host::Host::parse_opaque (1 samples, 0.03%)</title><rect x="0.1629%" y="357" width="0.0271%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="1"/><text x="0.4129%" y="367.50"></text></g><g><title>app`tokio::runtime::io::scheduled_io::ScheduledIo::wake (1 samples, 0.03%)</title><rect x="0.1900%" y="437" width="0.0271%" height="15" fill="rgb(210,31,41)" fg:x="7" fg:w="1"/><text x="0.4400%" y="447.50"></text></g><g><title>app`tokio::runtime::task::waker::wake_by_val (1 samples, 0.03%)</title><rect x="0.1900%" y="421" width="0.0271%" height="15" fill="rgb(221,200,47)" fg:x="7" fg:w="1"/><text x="0.4400%" y="431.50"></text></g><g><title>app`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="0.1900%" y="405" width="0.0271%" height="15" fill="rgb(226,26,5)" fg:x="7" fg:w="1"/><text x="0.4400%" y="415.50"></text></g><g><title>app`&lt;tokio::runtime::scheduler::current_thread::Handle as tokio::util::wake::Wake&gt;::wake (1 samples, 0.03%)</title><rect x="0.1900%" y="389" width="0.0271%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="1"/><text x="0.4400%" y="399.50"></text></g><g><title>app`tokio::runtime::driver::Handle::unpark (1 samples, 0.03%)</title><rect x="0.1900%" y="373" width="0.0271%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="1"/><text x="0.4400%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.03%)</title><rect x="0.1900%" y="357" width="0.0271%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="1"/><text x="0.4400%" y="367.50"></text></g><g><title>dyld`start (10 samples, 0.27%)</title><rect x="0.0000%" y="629" width="0.2714%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="10"/><text x="0.2500%" y="639.50"></text></g><g><title>app`main (10 samples, 0.27%)</title><rect x="0.0000%" y="613" width="0.2714%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="10"/><text x="0.2500%" y="623.50"></text></g><g><title>app`std::rt::lang_start_internal (10 samples, 0.27%)</title><rect x="0.0000%" y="597" width="0.2714%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="10"/><text x="0.2500%" y="607.50"></text></g><g><title>app`std::rt::lang_start::_{{closure}} (10 samples, 0.27%)</title><rect x="0.0000%" y="581" width="0.2714%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="10"/><text x="0.2500%" y="591.50"></text></g><g><title>app`std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 0.27%)</title><rect x="0.0000%" y="565" width="0.2714%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="10"/><text x="0.2500%" y="575.50"></text></g><g><title>app`app::main (10 samples, 0.27%)</title><rect x="0.0000%" y="549" width="0.2714%" height="15" fill="rgb(214,148,48)" fg:x="0" fg:w="10"/><text x="0.2500%" y="559.50"></text></g><g><title>app`tokio::runtime::runtime::Runtime::block_on (10 samples, 0.27%)</title><rect x="0.0000%" y="533" width="0.2714%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="10"/><text x="0.2500%" y="543.50"></text></g><g><title>app`tokio::runtime::scheduler::current_thread::CurrentThread::block_on (10 samples, 0.27%)</title><rect x="0.0000%" y="517" width="0.2714%" height="15" fill="rgb(209,103,24)" fg:x="0" fg:w="10"/><text x="0.2500%" y="527.50"></text></g><g><title>app`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (10 samples, 0.27%)</title><rect x="0.0000%" y="501" width="0.2714%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="10"/><text x="0.2500%" y="511.50"></text></g><g><title>app`tokio::runtime::scheduler::current_thread::Context::park (3 samples, 0.08%)</title><rect x="0.1900%" y="485" width="0.0814%" height="15" fill="rgb(213,181,19)" fg:x="7" fg:w="3"/><text x="0.4400%" y="495.50"></text></g><g><title>app`tokio::runtime::time::Driver::park_internal (3 samples, 0.08%)</title><rect x="0.1900%" y="469" width="0.0814%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="3"/><text x="0.4400%" y="479.50"></text></g><g><title>app`tokio::runtime::io::Driver::turn (3 samples, 0.08%)</title><rect x="0.1900%" y="453" width="0.0814%" height="15" fill="rgb(241,83,37)" fg:x="7" fg:w="3"/><text x="0.4400%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`kevent (2 samples, 0.05%)</title><rect x="0.2172%" y="437" width="0.0543%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="2"/><text x="0.4672%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1 samples, 0.03%)</title><rect x="0.2714%" y="629" width="0.0271%" height="15" fill="rgb(226,3,54)" fg:x="10" fg:w="1"/><text x="0.5214%" y="639.50"></text></g><g><title>app`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.03%)</title><rect x="0.2986%" y="565" width="0.0271%" height="15" fill="rgb(245,192,40)" fg:x="11" fg:w="1"/><text x="0.5486%" y="575.50"></text></g><g><title>app`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (2 samples, 0.05%)</title><rect x="0.3257%" y="405" width="0.0543%" height="15" fill="rgb(238,167,29)" fg:x="12" fg:w="2"/><text x="0.5757%" y="415.50"></text></g><g><title>app`&lt;actix_rt::arbiter::ArbiterRunner as core::future::future::Future&gt;::poll (3 samples, 0.08%)</title><rect x="0.3257%" y="453" width="0.0814%" height="15" fill="rgb(232,182,51)" fg:x="12" fg:w="3"/><text x="0.5757%" y="463.50"></text></g><g><title>app`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (3 samples, 0.08%)</title><rect x="0.3257%" y="437" width="0.0814%" height="15" fill="rgb(231,60,39)" fg:x="12" fg:w="3"/><text x="0.5757%" y="447.50"></text></g><g><title>app`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.08%)</title><rect x="0.3257%" y="421" width="0.0814%" height="15" fill="rgb(208,69,12)" fg:x="12" fg:w="3"/><text x="0.5757%" y="431.50"></text></g><g><title>app`tokio::util::wake::drop_arc_raw (1 samples, 0.03%)</title><rect x="0.3800%" y="405" width="0.0271%" height="15" fill="rgb(235,93,37)" fg:x="14" fg:w="1"/><text x="0.6300%" y="415.50"></text></g><g><title>app`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (1 samples, 0.03%)</title><rect x="0.4072%" y="453" width="0.0271%" height="15" fill="rgb(213,116,39)" fg:x="15" fg:w="1"/><text x="0.6572%" y="463.50"></text></g><g><title>app`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.03%)</title><rect x="0.4343%" y="405" width="0.0271%" height="15" fill="rgb(222,207,29)" fg:x="16" fg:w="1"/><text x="0.6843%" y="415.50"></text></g><g><title>app`&lt;actix::io::WriterFut&lt;T,E&gt; as actix::fut::future::ActorFuture&lt;A&gt;&gt;::poll (1 samples, 0.03%)</title><rect x="0.4615%" y="357" width="0.0271%" height="15" fill="rgb(206,96,30)" fg:x="17" fg:w="1"/><text x="0.7115%" y="367.50"></text></g><g><title>app`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1 samples, 0.03%)</title><rect x="0.4615%" y="341" width="0.0271%" height="15" fill="rgb(218,138,4)" fg:x="17" fg:w="1"/><text x="0.7115%" y="351.50"></text></g><g><title>app`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.03%)</title><rect x="0.4615%" y="325" width="0.0271%" height="15" fill="rgb(250,191,14)" fg:x="17" fg:w="1"/><text x="0.7115%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (1 samples, 0.03%)</title><rect x="0.4615%" y="309" width="0.0271%" height="15" fill="rgb(239,60,40)" fg:x="17" fg:w="1"/><text x="0.7115%" y="319.50"></text></g><g><title>app`&lt;actix::supervisor::Supervisor&lt;A&gt; as core::future::future::Future&gt;::poll (2 samples, 0.05%)</title><rect x="0.4615%" y="389" width="0.0543%" height="15" fill="rgb(206,27,48)" fg:x="17" fg:w="2"/><text x="0.7115%" y="399.50"></text></g><g><title>app`&lt;actix::contextimpl::ContextFut&lt;A,C&gt; as core::future::future::Future&gt;::poll (2 samples, 0.05%)</title><rect x="0.4615%" y="373" width="0.0543%" height="15" fill="rgb(225,35,8)" fg:x="17" fg:w="2"/><text x="0.7115%" y="383.50"></text></g><g><title>app`&lt;actix::stream::ActorStream&lt;S&gt; as actix::fut::future::ActorFuture&lt;A&gt;&gt;::poll (1 samples, 0.03%)</title><rect x="0.4886%" y="357" width="0.0271%" height="15" fill="rgb(250,213,24)" fg:x="18" fg:w="1"/><text x="0.7386%" y="367.50"></text></g><g><title>app`&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.03%)</title><rect x="0.4886%" y="341" width="0.0271%" height="15" fill="rgb(247,123,22)" fg:x="18" fg:w="1"/><text x="0.7386%" y="351.50"></text></g><g><title>app`tokio_util::util::poll_read_buf (1 samples, 0.03%)</title><rect x="0.4886%" y="325" width="0.0271%" height="15" fill="rgb(231,138,38)" fg:x="18" fg:w="1"/><text x="0.7386%" y="335.50"></text></g><g><title>app`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.03%)</title><rect x="0.4886%" y="309" width="0.0271%" height="15" fill="rgb(231,145,46)" fg:x="18" fg:w="1"/><text x="0.7386%" y="319.50"></text></g><g><title>app`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.03%)</title><rect x="0.4886%" y="293" width="0.0271%" height="15" fill="rgb(251,118,11)" fg:x="18" fg:w="1"/><text x="0.7386%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (1 samples, 0.03%)</title><rect x="0.4886%" y="277" width="0.0271%" height="15" fill="rgb(217,147,25)" fg:x="18" fg:w="1"/><text x="0.7386%" y="287.50"></text></g><g><title>app`actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_flush (1 samples, 0.03%)</title><rect x="0.5157%" y="373" width="0.0271%" height="15" fill="rgb(247,81,37)" fg:x="19" fg:w="1"/><text x="0.7657%" y="383.50"></text></g><g><title>app`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1 samples, 0.03%)</title><rect x="0.5157%" y="357" width="0.0271%" height="15" fill="rgb(209,12,38)" fg:x="19" fg:w="1"/><text x="0.7657%" y="367.50"></text></g><g><title>app`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.03%)</title><rect x="0.5157%" y="341" width="0.0271%" height="15" fill="rgb(227,1,9)" fg:x="19" fg:w="1"/><text x="0.7657%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (1 samples, 0.03%)</title><rect x="0.5157%" y="325" width="0.0271%" height="15" fill="rgb(248,47,43)" fg:x="19" fg:w="1"/><text x="0.7657%" y="335.50"></text></g><g><title>app`&lt;actix_http::requests::head::RequestHead as actix_http::message::Head&gt;::with_pool (1 samples, 0.03%)</title><rect x="0.5429%" y="325" width="0.0271%" height="15" fill="rgb(221,10,30)" fg:x="20" fg:w="1"/><text x="0.7929%" y="335.50"></text></g><g><title>app`&lt;actix_http::requests::head::RequestHead as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="0.5700%" y="325" width="0.0271%" height="15" fill="rgb(210,229,1)" fg:x="21" fg:w="1"/><text x="0.8200%" y="335.50"></text></g><g><title>app`&lt;actix_http::h1::codec::Codec as tokio_util::codec::decoder::Decoder&gt;::decode (3 samples, 0.08%)</title><rect x="0.5429%" y="357" width="0.0814%" height="15" fill="rgb(222,148,37)" fg:x="20" fg:w="3"/><text x="0.7929%" y="367.50"></text></g><g><title>app`&lt;actix_http::requests::request::Request as actix_http::h1::decoder::MessageType&gt;::decode (3 samples, 0.08%)</title><rect x="0.5429%" y="341" width="0.0814%" height="15" fill="rgb(234,67,33)" fg:x="20" fg:w="3"/><text x="0.7929%" y="351.50"></text></g><g><title>app`httparse::Request::parse_with_config_and_uninit_headers (1 samples, 0.03%)</title><rect x="0.5972%" y="325" width="0.0271%" height="15" fill="rgb(247,98,35)" fg:x="22" fg:w="1"/><text x="0.8472%" y="335.50"></text></g><g><title>app`httparse::parse_headers_iter_uninit (1 samples, 0.03%)</title><rect x="0.5972%" y="309" width="0.0271%" height="15" fill="rgb(247,138,52)" fg:x="22" fg:w="1"/><text x="0.8472%" y="319.50"></text></g><g><title>app`&lt;actix_web::app_service::AppInitService&lt;T,B&gt; as actix_service::Service&lt;actix_http::requests::request::Request&gt;&gt;::call (1 samples, 0.03%)</title><rect x="0.6243%" y="357" width="0.0271%" height="15" fill="rgb(213,79,30)" fg:x="23" fg:w="1"/><text x="0.8743%" y="367.50"></text></g><g><title>app`&lt;tracing_actix_web::middleware::TracingLoggerMiddleware&lt;S,RootSpanType&gt; as actix_service::Service&lt;actix_web::service::ServiceRequest&gt;&gt;::call (1 samples, 0.03%)</title><rect x="0.6243%" y="341" width="0.0271%" height="15" fill="rgb(246,177,23)" fg:x="23" fg:w="1"/><text x="0.8743%" y="351.50"></text></g><g><title>app`&lt;tracing_actix_web::root_span_builder::DefaultRootSpanBuilder as tracing_actix_web::root_span_builder::RootSpanBuilder&gt;::on_request_start (1 samples, 0.03%)</title><rect x="0.6243%" y="325" width="0.0271%" height="15" fill="rgb(230,62,27)" fg:x="23" fg:w="1"/><text x="0.8743%" y="335.50"></text></g><g><title>app`actix_web::rmap::ResourceMap::match_pattern (1 samples, 0.03%)</title><rect x="0.6243%" y="309" width="0.0271%" height="15" fill="rgb(216,154,8)" fg:x="23" fg:w="1"/><text x="0.8743%" y="319.50"></text></g><g><title>app`actix_web::rmap::ResourceMap::_find_matching_node (1 samples, 0.03%)</title><rect x="0.6243%" y="293" width="0.0271%" height="15" fill="rgb(244,35,45)" fg:x="23" fg:w="1"/><text x="0.8743%" y="303.50"></text></g><g><title>app`actix_web::rmap::ResourceMap::_find_matching_node (1 samples, 0.03%)</title><rect x="0.6243%" y="277" width="0.0271%" height="15" fill="rgb(251,115,12)" fg:x="23" fg:w="1"/><text x="0.8743%" y="287.50"></text></g><g><title>app`actix_web::rmap::ResourceMap::_find_matching_node (1 samples, 0.03%)</title><rect x="0.6243%" y="261" width="0.0271%" height="15" fill="rgb(240,54,50)" fg:x="23" fg:w="1"/><text x="0.8743%" y="271.50"></text></g><g><title>app`actix_router::resource::ResourceDef::find_match (1 samples, 0.03%)</title><rect x="0.6243%" y="245" width="0.0271%" height="15" fill="rgb(233,84,52)" fg:x="23" fg:w="1"/><text x="0.8743%" y="255.50"></text></g><g><title>app`regex::re_unicode::Regex::captures (1 samples, 0.03%)</title><rect x="0.6243%" y="229" width="0.0271%" height="15" fill="rgb(207,117,47)" fg:x="23" fg:w="1"/><text x="0.8743%" y="239.50"></text></g><g><title>app`regex::re_unicode::Regex::captures_read_at (1 samples, 0.03%)</title><rect x="0.6243%" y="213" width="0.0271%" height="15" fill="rgb(249,43,39)" fg:x="23" fg:w="1"/><text x="0.8743%" y="223.50"></text></g><g><title>app`regex::exec::ExecNoSync::captures_nfa (1 samples, 0.03%)</title><rect x="0.6243%" y="197" width="0.0271%" height="15" fill="rgb(209,38,44)" fg:x="23" fg:w="1"/><text x="0.8743%" y="207.50"></text></g><g><title>app`regex::utf8::decode_utf8 (1 samples, 0.03%)</title><rect x="0.6243%" y="181" width="0.0271%" height="15" fill="rgb(236,212,23)" fg:x="23" fg:w="1"/><text x="0.8743%" y="191.50"></text></g><g><title>app`&lt;actix_files::service::FilesService as actix_service::Service&lt;actix_web::service::ServiceRequest&gt;&gt;::call::_{{closure}} (1 samples, 0.03%)</title><rect x="0.6515%" y="325" width="0.0271%" height="15" fill="rgb(242,79,21)" fg:x="24" fg:w="1"/><text x="0.9015%" y="335.50"></text></g><g><title>app`std::fs::OpenOptions::_open (1 samples, 0.03%)</title><rect x="0.6515%" y="309" width="0.0271%" height="15" fill="rgb(211,96,35)" fg:x="24" fg:w="1"/><text x="0.9015%" y="319.50"></text></g><g><title>app`std::sys::unix::fs::File::open_c (1 samples, 0.03%)</title><rect x="0.6515%" y="293" width="0.0271%" height="15" fill="rgb(253,215,40)" fg:x="24" fg:w="1"/><text x="0.9015%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.03%)</title><rect x="0.6515%" y="277" width="0.0271%" height="15" fill="rgb(211,81,21)" fg:x="24" fg:w="1"/><text x="0.9015%" y="287.50"></text></g><g><title>app`&lt;actix_web::app_service::AppRouting as actix_service::Service&lt;actix_web::service::ServiceRequest&gt;&gt;::call (1 samples, 0.03%)</title><rect x="0.6786%" y="325" width="0.0271%" height="15" fill="rgb(208,190,38)" fg:x="25" fg:w="1"/><text x="0.9286%" y="335.50"></text></g><g><title>app`&lt;actix_service::boxed::ServiceWrapper&lt;S&gt; as actix_service::Service&lt;Req&gt;&gt;::call (1 samples, 0.03%)</title><rect x="0.6786%" y="309" width="0.0271%" height="15" fill="rgb(235,213,38)" fg:x="25" fg:w="1"/><text x="0.9286%" y="319.50"></text></g><g><title>app`&lt;actix_web::scope::ScopeService as actix_service::Service&lt;actix_web::service::ServiceRequest&gt;&gt;::call (1 samples, 0.03%)</title><rect x="0.6786%" y="293" width="0.0271%" height="15" fill="rgb(237,122,38)" fg:x="25" fg:w="1"/><text x="0.9286%" y="303.50"></text></g><g><title>app`actix_router::resource::ResourceDef::capture_match_info_fn (1 samples, 0.03%)</title><rect x="0.6786%" y="277" width="0.0271%" height="15" fill="rgb(244,218,35)" fg:x="25" fg:w="1"/><text x="0.9286%" y="287.50"></text></g><g><title>app`&lt;actix_web::scope::Scope&lt;T&gt; as actix_web::service::HttpServiceFactory&gt;::register::_{{closure}}::_{{closure}} (1 samples, 0.03%)</title><rect x="0.7058%" y="325" width="0.0271%" height="15" fill="rgb(240,68,47)" fg:x="26" fg:w="1"/><text x="0.9558%" y="335.50"></text></g><g><title>app`&lt;actix_web::resource::Resource&lt;T&gt; as actix_web::service::HttpServiceFactory&gt;::register::_{{closure}}::_{{closure}} (1 samples, 0.03%)</title><rect x="0.7058%" y="309" width="0.0271%" height="15" fill="rgb(210,16,53)" fg:x="26" fg:w="1"/><text x="0.9558%" y="319.50"></text></g><g><title>app`actix_web::handler::handler_service::_{{closure}}::_{{closure}} (1 samples, 0.03%)</title><rect x="0.7058%" y="293" width="0.0271%" height="15" fill="rgb(235,124,12)" fg:x="26" fg:w="1"/><text x="0.9558%" y="303.50"></text></g><g><title>app`&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="0.7058%" y="277" width="0.0271%" height="15" fill="rgb(224,169,11)" fg:x="26" fg:w="1"/><text x="0.9558%" y="287.50"></text></g><g><title>app`&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.03%)</title><rect x="0.7058%" y="261" width="0.0271%" height="15" fill="rgb(250,166,2)" fg:x="26" fg:w="1"/><text x="0.9558%" y="271.50"></text></g><g><title>app`&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.03%)</title><rect x="0.7058%" y="245" width="0.0271%" height="15" fill="rgb(242,216,29)" fg:x="26" fg:w="1"/><text x="0.9558%" y="255.50"></text></g><g><title>app`&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="0.7058%" y="229" width="0.0271%" height="15" fill="rgb(230,116,27)" fg:x="26" fg:w="1"/><text x="0.9558%" y="239.50"></text></g><g><title>app`&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.03%)</title><rect x="0.7058%" y="213" width="0.0271%" height="15" fill="rgb(228,99,48)" fg:x="26" fg:w="1"/><text x="0.9558%" y="223.50"></text></g><g><title>app`&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="0.7058%" y="197" width="0.0271%" height="15" fill="rgb(253,11,6)" fg:x="26" fg:w="1"/><text x="0.9558%" y="207.50"></text></g><g><title>app`&lt;sqlx_core::postgres::connection::PgConnection as sqlx_core::connection::Connection&gt;::ping (1 samples, 0.03%)</title><rect x="0.7058%" y="181" width="0.0271%" height="15" fill="rgb(247,143,39)" fg:x="26" fg:w="1"/><text x="0.9558%" y="191.50"></text></g><g><title>app`actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_request (8 samples, 0.22%)</title><rect x="0.5429%" y="373" width="0.2172%" height="15" fill="rgb(236,97,10)" fg:x="20" fg:w="8"/><text x="0.7929%" y="383.50"></text></g><g><title>app`tracing::span::Span::in_scope (4 samples, 0.11%)</title><rect x="0.6515%" y="357" width="0.1086%" height="15" fill="rgb(233,208,19)" fg:x="24" fg:w="4"/><text x="0.9015%" y="367.50"></text></g><g><title>app`&lt;actix_session::middleware::InnerSessionMiddleware&lt;S,Store&gt; as actix_service::Service&lt;actix_web::service::ServiceRequest&gt;&gt;::call::_{{closure}} (4 samples, 0.11%)</title><rect x="0.6515%" y="341" width="0.1086%" height="15" fill="rgb(216,164,2)" fg:x="24" fg:w="4"/><text x="0.9015%" y="351.50"></text></g><g><title>app`actix_session::middleware::extract_session_key (1 samples, 0.03%)</title><rect x="0.7329%" y="325" width="0.0271%" height="15" fill="rgb(220,129,5)" fg:x="27" fg:w="1"/><text x="0.9829%" y="335.50"></text></g><g><title>app`actix_http::header::map::HeaderMap::get_value (1 samples, 0.03%)</title><rect x="0.7329%" y="309" width="0.0271%" height="15" fill="rgb(242,17,10)" fg:x="27" fg:w="1"/><text x="0.9829%" y="319.50"></text></g><g><title>app`&lt;actix_session::middleware::InnerSessionMiddleware&lt;S,Store&gt; as actix_service::Service&lt;actix_web::service::ServiceRequest&gt;&gt;::call::_{{closure}} (1 samples, 0.03%)</title><rect x="0.7600%" y="357" width="0.0271%" height="15" fill="rgb(242,107,0)" fg:x="28" fg:w="1"/><text x="1.0100%" y="367.50"></text></g><g><title>app`&lt;actix_router::path::PathItem as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="0.7872%" y="261" width="0.0271%" height="15" fill="rgb(251,28,31)" fg:x="29" fg:w="1"/><text x="1.0372%" y="271.50"></text></g><g><title>app`&lt;actix_web::app_service::AppRouting as actix_service::Service&lt;actix_web::service::ServiceRequest&gt;&gt;::call (2 samples, 0.05%)</title><rect x="0.7872%" y="325" width="0.0543%" height="15" fill="rgb(233,223,10)" fg:x="29" fg:w="2"/><text x="1.0372%" y="335.50"></text></g><g><title>app`&lt;actix_service::boxed::ServiceWrapper&lt;S&gt; as actix_service::Service&lt;Req&gt;&gt;::call (2 samples, 0.05%)</title><rect x="0.7872%" y="309" width="0.0543%" height="15" fill="rgb(215,21,27)" fg:x="29" fg:w="2"/><text x="1.0372%" y="319.50"></text></g><g><title>app`&lt;actix_web::scope::ScopeService as actix_service::Service&lt;actix_web::service::ServiceRequest&gt;&gt;::call (2 samples, 0.05%)</title><rect x="0.7872%" y="293" width="0.0543%" height="15" fill="rgb(232,23,21)" fg:x="29" fg:w="2"/><text x="1.0372%" y="303.50"></text></g><g><title>app`actix_router::resource::ResourceDef::capture_match_info_fn (2 samples, 0.05%)</title><rect x="0.7872%" y="277" width="0.0543%" height="15" fill="rgb(244,5,23)" fg:x="29" fg:w="2"/><text x="1.0372%" y="287.50"></text></g><g><title>app`regex::re_unicode::Captures::name (1 samples, 0.03%)</title><rect x="0.8143%" y="261" width="0.0271%" height="15" fill="rgb(226,81,46)" fg:x="30" fg:w="1"/><text x="1.0643%" y="271.50"></text></g><g><title>app`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="0.8143%" y="245" width="0.0271%" height="15" fill="rgb(247,70,30)" fg:x="30" fg:w="1"/><text x="1.0643%" y="255.50"></text></g><g><title>app`&lt;actix_web::resource::Resource&lt;T&gt; as actix_web::service::HttpServiceFactory&gt;::register::_{{closure}}::_{{closure}} (2 samples, 0.05%)</title><rect x="0.8415%" y="325" width="0.0543%" height="15" fill="rgb(212,68,19)" fg:x="31" fg:w="2"/><text x="1.0915%" y="335.50"></text></g><g><title>app`actix_web::handler::handler_service::_{{closure}}::_{{closure}} (2 samples, 0.05%)</title><rect x="0.8415%" y="309" width="0.0543%" height="15" fill="rgb(240,187,13)" fg:x="31" fg:w="2"/><text x="1.0915%" y="319.50"></text></g><g><title>app`actix_files::named::NamedFile::open (2 samples, 0.05%)</title><rect x="0.8415%" y="293" width="0.0543%" height="15" fill="rgb(223,113,26)" fg:x="31" fg:w="2"/><text x="1.0915%" y="303.50"></text></g><g><title>app`std::fs::OpenOptions::_open (2 samples, 0.05%)</title><rect x="0.8415%" y="277" width="0.0543%" height="15" fill="rgb(206,192,2)" fg:x="31" fg:w="2"/><text x="1.0915%" y="287.50"></text></g><g><title>app`std::sys::unix::fs::File::open_c (2 samples, 0.05%)</title><rect x="0.8415%" y="261" width="0.0543%" height="15" fill="rgb(241,108,4)" fg:x="31" fg:w="2"/><text x="1.0915%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__open (2 samples, 0.05%)</title><rect x="0.8415%" y="245" width="0.0543%" height="15" fill="rgb(247,173,49)" fg:x="31" fg:w="2"/><text x="1.0915%" y="255.50"></text></g><g><title>app`&lt;actix_web::types::path::Path&lt;T&gt; as actix_web::extract::FromRequest&gt;::from_request (1 samples, 0.03%)</title><rect x="0.8958%" y="277" width="0.0271%" height="15" fill="rgb(224,114,35)" fg:x="33" fg:w="1"/><text x="1.1458%" y="287.50"></text></g><g><title>app`&lt;actix_router::de::PathDeserializer&lt;T&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.03%)</title><rect x="0.8958%" y="261" width="0.0271%" height="15" fill="rgb(245,159,27)" fg:x="33" fg:w="1"/><text x="1.1458%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.03%)</title><rect x="0.8958%" y="245" width="0.0271%" height="15" fill="rgb(245,172,44)" fg:x="33" fg:w="1"/><text x="1.1458%" y="255.50"></text></g><g><title>app`&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="0.9229%" y="213" width="0.0271%" height="15" fill="rgb(236,23,11)" fg:x="34" fg:w="1"/><text x="1.1729%" y="223.50"></text></g><g><title>app`tokio::runtime::scheduler::Handle::spawn (1 samples, 0.03%)</title><rect x="0.9229%" y="197" width="0.0271%" height="15" fill="rgb(205,117,38)" fg:x="34" fg:w="1"/><text x="1.1729%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="0.9229%" y="181" width="0.0271%" height="15" fill="rgb(237,72,25)" fg:x="34" fg:w="1"/><text x="1.1729%" y="191.50"></text></g><g><title>app`&lt;sqlx_core::postgres::connection::PgConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (1 samples, 0.03%)</title><rect x="0.9501%" y="197" width="0.0271%" height="15" fill="rgb(244,70,9)" fg:x="35" fg:w="1"/><text x="1.2001%" y="207.50"></text></g><g><title>app`sqlx_core::postgres::connection::PgConnection::wait_until_ready::_{{closure}} (1 samples, 0.03%)</title><rect x="0.9501%" y="181" width="0.0271%" height="15" fill="rgb(217,125,39)" fg:x="35" fg:w="1"/><text x="1.2001%" y="191.50"></text></g><g><title>app`sqlx_core::postgres::connection::stream::PgStream::recv::_{{closure}} (1 samples, 0.03%)</title><rect x="0.9501%" y="165" width="0.0271%" height="15" fill="rgb(235,36,10)" fg:x="35" fg:w="1"/><text x="1.2001%" y="175.50"></text></g><g><title>app`sqlx_core::postgres::connection::stream::PgStream::recv_unchecked::_{{closure}} (1 samples, 0.03%)</title><rect x="0.9501%" y="149" width="0.0271%" height="15" fill="rgb(251,123,47)" fg:x="35" fg:w="1"/><text x="1.2001%" y="159.50"></text></g><g><title>app`sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read::_{{closure}} (1 samples, 0.03%)</title><rect x="0.9501%" y="133" width="0.0271%" height="15" fill="rgb(221,13,13)" fg:x="35" fg:w="1"/><text x="1.2001%" y="143.50"></text></g><g><title>app`&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="0.9501%" y="117" width="0.0271%" height="15" fill="rgb(238,131,9)" fg:x="35" fg:w="1"/><text x="1.2001%" y="127.50"></text></g><g><title>app`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.03%)</title><rect x="0.9501%" y="101" width="0.0271%" height="15" fill="rgb(211,50,8)" fg:x="35" fg:w="1"/><text x="1.2001%" y="111.50"></text></g><g><title>app`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.03%)</title><rect x="0.9501%" y="85" width="0.0271%" height="15" fill="rgb(245,182,24)" fg:x="35" fg:w="1"/><text x="1.2001%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (1 samples, 0.03%)</title><rect x="0.9501%" y="69" width="0.0271%" height="15" fill="rgb(242,14,37)" fg:x="35" fg:w="1"/><text x="1.2001%" y="79.50"></text></g><g><title>app`sha2::sha256::soft::compress (2 samples, 0.05%)</title><rect x="0.9772%" y="149" width="0.0543%" height="15" fill="rgb(246,228,12)" fg:x="36" fg:w="2"/><text x="1.2272%" y="159.50"></text></g><g><title>app`&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (5 samples, 0.14%)</title><rect x="0.9229%" y="277" width="0.1357%" height="15" fill="rgb(213,55,15)" fg:x="34" fg:w="5"/><text x="1.1729%" y="287.50"></text></g><g><title>app`&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.14%)</title><rect x="0.9229%" y="261" width="0.1357%" height="15" fill="rgb(209,9,3)" fg:x="34" fg:w="5"/><text x="1.1729%" y="271.50"></text></g><g><title>app`&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.14%)</title><rect x="0.9229%" y="245" width="0.1357%" height="15" fill="rgb(230,59,30)" fg:x="34" fg:w="5"/><text x="1.1729%" y="255.50"></text></g><g><title>app`&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (5 samples, 0.14%)</title><rect x="0.9229%" y="229" width="0.1357%" height="15" fill="rgb(209,121,21)" fg:x="34" fg:w="5"/><text x="1.1729%" y="239.50"></text></g><g><title>app`&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.11%)</title><rect x="0.9501%" y="213" width="0.1086%" height="15" fill="rgb(220,109,13)" fg:x="35" fg:w="4"/><text x="1.2001%" y="223.50"></text></g><g><title>app`&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.08%)</title><rect x="0.9772%" y="197" width="0.0814%" height="15" fill="rgb(232,18,1)" fg:x="36" fg:w="3"/><text x="1.2272%" y="207.50"></text></g><g><title>app`sqlx_core::postgres::connection::establish::_&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::establish::_{{closure}} (3 samples, 0.08%)</title><rect x="0.9772%" y="181" width="0.0814%" height="15" fill="rgb(215,41,42)" fg:x="36" fg:w="3"/><text x="1.2272%" y="191.50"></text></g><g><title>app`sqlx_core::postgres::connection::sasl::authenticate::_{{closure}} (3 samples, 0.08%)</title><rect x="0.9772%" y="165" width="0.0814%" height="15" fill="rgb(224,123,36)" fg:x="36" fg:w="3"/><text x="1.2272%" y="175.50"></text></g><g><title>app`sqlx_core::postgres::connection::sasl::hi (1 samples, 0.03%)</title><rect x="1.0315%" y="149" width="0.0271%" height="15" fill="rgb(240,125,3)" fg:x="38" fg:w="1"/><text x="1.2815%" y="159.50"></text></g><g><title>app`sha2::sha256::soft::compress (1 samples, 0.03%)</title><rect x="1.0315%" y="133" width="0.0271%" height="15" fill="rgb(205,98,50)" fg:x="38" fg:w="1"/><text x="1.2815%" y="143.50"></text></g><g><title>app`&lt;sqlx_core::pool::Pool&lt;sqlx_core::postgres::database::Postgres&gt; as backend::model::follow::FollowRepository&gt;::get_followees_by_name::_{{closure}} (1 samples, 0.03%)</title><rect x="1.0586%" y="277" width="0.0271%" height="15" fill="rgb(205,185,37)" fg:x="39" fg:w="1"/><text x="1.3086%" y="287.50"></text></g><g><title>app`&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="1.0586%" y="261" width="0.0271%" height="15" fill="rgb(238,207,15)" fg:x="39" fg:w="1"/><text x="1.3086%" y="271.50"></text></g><g><title>app`&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.03%)</title><rect x="1.0586%" y="245" width="0.0271%" height="15" fill="rgb(213,199,42)" fg:x="39" fg:w="1"/><text x="1.3086%" y="255.50"></text></g><g><title>app`&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.03%)</title><rect x="1.0586%" y="229" width="0.0271%" height="15" fill="rgb(235,201,11)" fg:x="39" fg:w="1"/><text x="1.3086%" y="239.50"></text></g><g><title>app`&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="1.0586%" y="213" width="0.0271%" height="15" fill="rgb(207,46,11)" fg:x="39" fg:w="1"/><text x="1.3086%" y="223.50"></text></g><g><title>app`&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.03%)</title><rect x="1.0586%" y="197" width="0.0271%" height="15" fill="rgb(241,35,35)" fg:x="39" fg:w="1"/><text x="1.3086%" y="207.50"></text></g><g><title>app`&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="1.0586%" y="181" width="0.0271%" height="15" fill="rgb(243,32,47)" fg:x="39" fg:w="1"/><text x="1.3086%" y="191.50"></text></g><g><title>app`&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.03%)</title><rect x="1.0586%" y="165" width="0.0271%" height="15" fill="rgb(247,202,23)" fg:x="39" fg:w="1"/><text x="1.3086%" y="175.50"></text></g><g><title>app`&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="1.0586%" y="149" width="0.0271%" height="15" fill="rgb(219,102,11)" fg:x="39" fg:w="1"/><text x="1.3086%" y="159.50"></text></g><g><title>app`&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="1.0586%" y="133" width="0.0271%" height="15" fill="rgb(243,110,44)" fg:x="39" fg:w="1"/><text x="1.3086%" y="143.50"></text></g><g><title>app`sqlx_core::postgres::connection::stream::PgStream::recv::_{{closure}} (1 samples, 0.03%)</title><rect x="1.0586%" y="117" width="0.0271%" height="15" fill="rgb(222,74,54)" fg:x="39" fg:w="1"/><text x="1.3086%" y="127.50"></text></g><g><title>app`sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read::_{{closure}} (1 samples, 0.03%)</title><rect x="1.0586%" y="101" width="0.0271%" height="15" fill="rgb(216,99,12)" fg:x="39" fg:w="1"/><text x="1.3086%" y="111.50"></text></g><g><title>app`&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="1.0586%" y="85" width="0.0271%" height="15" fill="rgb(226,22,26)" fg:x="39" fg:w="1"/><text x="1.3086%" y="95.50"></text></g><g><title>app`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.03%)</title><rect x="1.0586%" y="69" width="0.0271%" height="15" fill="rgb(217,163,10)" fg:x="39" fg:w="1"/><text x="1.3086%" y="79.50"></text></g><g><title>app`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.03%)</title><rect x="1.0586%" y="53" width="0.0271%" height="15" fill="rgb(213,25,53)" fg:x="39" fg:w="1"/><text x="1.3086%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (1 samples, 0.03%)</title><rect x="1.0586%" y="37" width="0.0271%" height="15" fill="rgb(252,105,26)" fg:x="39" fg:w="1"/><text x="1.3086%" y="47.50"></text></g><g><title>app`&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="1.0858%" y="181" width="0.0271%" height="15" fill="rgb(220,39,43)" fg:x="40" fg:w="1"/><text x="1.3358%" y="191.50"></text></g><g><title>app`tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (1 samples, 0.03%)</title><rect x="1.0858%" y="165" width="0.0271%" height="15" fill="rgb(229,68,48)" fg:x="40" fg:w="1"/><text x="1.3358%" y="175.50"></text></g><g><title>app`&lt;sqlx_core::pool::Pool&lt;sqlx_core::postgres::database::Postgres&gt; as backend::model::key_pair::KeyPairRepository&gt;::save_key_pair::_{{closure}} (2 samples, 0.05%)</title><rect x="1.0858%" y="277" width="0.0543%" height="15" fill="rgb(252,8,32)" fg:x="40" fg:w="2"/><text x="1.3358%" y="287.50"></text></g><g><title>app`sqlx_core::query::Query&lt;DB,A&gt;::execute::_{{closure}} (2 samples, 0.05%)</title><rect x="1.0858%" y="261" width="0.0543%" height="15" fill="rgb(223,20,43)" fg:x="40" fg:w="2"/><text x="1.3358%" y="271.50"></text></g><g><title>app`&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (2 samples, 0.05%)</title><rect x="1.0858%" y="245" width="0.0543%" height="15" fill="rgb(229,81,49)" fg:x="40" fg:w="2"/><text x="1.3358%" y="255.50"></text></g><g><title>app`&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.05%)</title><rect x="1.0858%" y="229" width="0.0543%" height="15" fill="rgb(236,28,36)" fg:x="40" fg:w="2"/><text x="1.3358%" y="239.50"></text></g><g><title>app`&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.05%)</title><rect x="1.0858%" y="213" width="0.0543%" height="15" fill="rgb(249,185,26)" fg:x="40" fg:w="2"/><text x="1.3358%" y="223.50"></text></g><g><title>app`&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (2 samples, 0.05%)</title><rect x="1.0858%" y="197" width="0.0543%" height="15" fill="rgb(249,174,33)" fg:x="40" fg:w="2"/><text x="1.3358%" y="207.50"></text></g><g><title>app`&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="1.1129%" y="181" width="0.0271%" height="15" fill="rgb(233,201,37)" fg:x="41" fg:w="1"/><text x="1.3629%" y="191.50"></text></g><g><title>app`&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="1.1129%" y="165" width="0.0271%" height="15" fill="rgb(221,78,26)" fg:x="41" fg:w="1"/><text x="1.3629%" y="175.50"></text></g><g><title>app`&lt;sqlx_core::pool::Pool&lt;sqlx_core::postgres::database::Postgres&gt; as backend::model::post::PostRepository&gt;::get_posts_by_user_name::_{{closure}} (1 samples, 0.03%)</title><rect x="1.1401%" y="277" width="0.0271%" height="15" fill="rgb(250,127,30)" fg:x="42" fg:w="1"/><text x="1.3901%" y="287.50"></text></g><g><title>app`core::ptr::drop_in_place&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;backend::model::post::Post,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;,alloc::vec::Vec&lt;backend::model::post::Post&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="1.1401%" y="261" width="0.0271%" height="15" fill="rgb(230,49,44)" fg:x="42" fg:w="1"/><text x="1.3901%" y="271.50"></text></g><g><title>app`core::ptr::drop_in_place$LT$futures_util..stream..try_stream..try_filter_map..TryFilterMap$LT$core..pin..Pin$LT$alloc..boxed..Box$LT$dyn$u20$futures_core..stream..Stream$u2b$Item$u20$$u3d$$u20$core..result..Result$LT$either..Either$LT$sqlx_core..postgres..query_result..PgQueryResult$C$backend..model..post..Post$GT$$C$sqlx_core..error..Error$GT$$u2b$core..marker..Send$GT$$GT$$C$sqlx_core..query..Map$LT$sqlx_core..postgres..database..Postgres$C$$LT$sqlx_core..pool..Pool$LT$sqlx_core..postgres..database..Postgres$GT$$u20$as$u20$backend..model..post..PostRepository$GT$..get_posts_by_user_name..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$sqlx_core..postgres..arguments..PgArguments$GT$..fetch$LT$$RF$sqlx_core..pool..Pool$LT$sqlx_core..postgres..database..Postgres$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$sqlx_core..query..Map$LT$sqlx_core..postgres..database..Postgres$C$$LT$sqlx_core..pool..Pool$LT$sqlx_core..postgres..database..Postgres$GT$$u20$as$u20$backend..model..post..� (1 samples, 0.03%)</title><rect x="1.1401%" y="245" width="0.0271%" height="15" fill="rgb(229,67,23)" fg:x="42" fg:w="1"/><text x="1.3901%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.03%)</title><rect x="1.1401%" y="229" width="0.0271%" height="15" fill="rgb(249,83,47)" fg:x="42" fg:w="1"/><text x="1.3901%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.03%)</title><rect x="1.1401%" y="213" width="0.0271%" height="15" fill="rgb(215,43,3)" fg:x="42" fg:w="1"/><text x="1.3901%" y="223.50"></text></g><g><title>app`pkcs8::traits::EncodePrivateKey::to_pkcs8_pem (1 samples, 0.03%)</title><rect x="1.1672%" y="261" width="0.0271%" height="15" fill="rgb(238,154,13)" fg:x="43" fg:w="1"/><text x="1.4172%" y="271.50"></text></g><g><title>app`rsa::encoding::_&lt;impl pkcs8::traits::EncodePrivateKey for rsa::key::RsaPrivateKey&gt;::to_pkcs8_der (1 samples, 0.03%)</title><rect x="1.1672%" y="245" width="0.0271%" height="15" fill="rgb(219,56,2)" fg:x="43" fg:w="1"/><text x="1.4172%" y="255.50"></text></g><g><title>app`der::encode::Encode::to_vec (1 samples, 0.03%)</title><rect x="1.1672%" y="229" width="0.0271%" height="15" fill="rgb(233,0,4)" fg:x="43" fg:w="1"/><text x="1.4172%" y="239.50"></text></g><g><title>app`der::length::Length::for_tlv (1 samples, 0.03%)</title><rect x="1.1672%" y="213" width="0.0271%" height="15" fill="rgb(235,30,7)" fg:x="43" fg:w="1"/><text x="1.4172%" y="223.50"></text></g><g><title>app`num_bigint_dig::algorithms::div::div_rem (1 samples, 0.03%)</title><rect x="1.1944%" y="229" width="0.0271%" height="15" fill="rgb(250,79,13)" fg:x="44" fg:w="1"/><text x="1.4444%" y="239.50"></text></g><g><title>app`compiler_builtins::int::specialized_div_rem::u128_div_rem (1 samples, 0.03%)</title><rect x="1.1944%" y="213" width="0.0271%" height="15" fill="rgb(211,146,34)" fg:x="44" fg:w="1"/><text x="1.4444%" y="223.50"></text></g><g><title>app`&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;u32&gt;&gt;::rem (1 samples, 0.03%)</title><rect x="1.2486%" y="213" width="0.0271%" height="15" fill="rgb(228,22,38)" fg:x="46" fg:w="1"/><text x="1.4986%" y="223.50"></text></g><g><title>app`num_bigint_dig::algorithms::div::div_rem_digit (1 samples, 0.03%)</title><rect x="1.2486%" y="197" width="0.0271%" height="15" fill="rgb(235,168,5)" fg:x="46" fg:w="1"/><text x="1.4986%" y="207.50"></text></g><g><title>app`num_bigint_dig::algorithms::div::div_rem_digit (1 samples, 0.03%)</title><rect x="1.2758%" y="213" width="0.0271%" height="15" fill="rgb(221,155,16)" fg:x="47" fg:w="1"/><text x="1.5258%" y="223.50"></text></g><g><title>app`&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::Add&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::add (2 samples, 0.05%)</title><rect x="1.3301%" y="197" width="0.0543%" height="15" fill="rgb(215,215,53)" fg:x="49" fg:w="2"/><text x="1.5801%" y="207.50"></text></g><g><title>app`&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::Sub&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::sub (2 samples, 0.05%)</title><rect x="1.7372%" y="181" width="0.0543%" height="15" fill="rgb(223,4,10)" fg:x="64" fg:w="2"/><text x="1.9872%" y="191.50"></text></g><g><title>app`compiler_builtins::int::specialized_div_rem::u128_div_rem (12 samples, 0.33%)</title><rect x="1.7915%" y="181" width="0.3257%" height="15" fill="rgb(234,103,6)" fg:x="66" fg:w="12"/><text x="2.0415%" y="191.50"></text></g><g><title>app`num_bigint_dig::algorithms::div::div_rem_digit (2 samples, 0.05%)</title><rect x="2.1173%" y="181" width="0.0543%" height="15" fill="rgb(227,97,0)" fg:x="78" fg:w="2"/><text x="2.3673%" y="191.50"></text></g><g><title>app`num_bigint_dig::algorithms::mac::mac3 (9 samples, 0.24%)</title><rect x="2.2801%" y="165" width="0.2443%" height="15" fill="rgb(234,150,53)" fg:x="84" fg:w="9"/><text x="2.5301%" y="175.50"></text></g><g><title>app`num_bigint_dig::algorithms::mul::mul3 (14 samples, 0.38%)</title><rect x="2.1716%" y="181" width="0.3800%" height="15" fill="rgb(228,201,54)" fg:x="80" fg:w="14"/><text x="2.4216%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 0.03%)</title><rect x="2.5244%" y="165" width="0.0271%" height="15" fill="rgb(222,22,37)" fg:x="93" fg:w="1"/><text x="2.7744%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (3 samples, 0.08%)</title><rect x="2.5516%" y="181" width="0.0814%" height="15" fill="rgb(237,53,32)" fg:x="94" fg:w="3"/><text x="2.8016%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.11%)</title><rect x="2.6330%" y="181" width="0.1086%" height="15" fill="rgb(233,25,53)" fg:x="97" fg:w="4"/><text x="2.8830%" y="191.50"></text></g><g><title>app`num_bigint_dig::algorithms::div::div_rem (51 samples, 1.38%)</title><rect x="1.3844%" y="197" width="1.3844%" height="15" fill="rgb(210,40,34)" fg:x="51" fg:w="51"/><text x="1.6344%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.03%)</title><rect x="2.7416%" y="181" width="0.0271%" height="15" fill="rgb(241,220,44)" fg:x="101" fg:w="1"/><text x="2.9916%" y="191.50"></text></g><g><title>app`num_bigint_dig::algorithms::mac::mac3 (8 samples, 0.22%)</title><rect x="2.7959%" y="181" width="0.2172%" height="15" fill="rgb(235,28,35)" fg:x="103" fg:w="8"/><text x="3.0459%" y="191.50"></text></g><g><title>app`num_bigint_dig::algorithms::mul::mul3 (10 samples, 0.27%)</title><rect x="2.7687%" y="197" width="0.2714%" height="15" fill="rgb(210,56,17)" fg:x="102" fg:w="10"/><text x="3.0187%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="3.0130%" y="181" width="0.0271%" height="15" fill="rgb(224,130,29)" fg:x="111" fg:w="1"/><text x="3.2630%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="3.0130%" y="165" width="0.0271%" height="15" fill="rgb(235,212,8)" fg:x="111" fg:w="1"/><text x="3.2630%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (1 samples, 0.03%)</title><rect x="3.0402%" y="197" width="0.0271%" height="15" fill="rgb(223,33,50)" fg:x="112" fg:w="1"/><text x="3.2902%" y="207.50"></text></g><g><title>app`num_bigint_dig::prime::probably_prime_lucas (66 samples, 1.79%)</title><rect x="1.3029%" y="213" width="1.7915%" height="15" fill="rgb(219,149,13)" fg:x="48" fg:w="66"/><text x="1.5529%" y="223.50">a..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="3.0673%" y="197" width="0.0271%" height="15" fill="rgb(250,156,29)" fg:x="113" fg:w="1"/><text x="3.3173%" y="207.50"></text></g><g><title>app`&lt;R as num_bigint_dig::bigrand::RandBigInt&gt;::gen_biguint_below (1 samples, 0.03%)</title><rect x="3.0945%" y="197" width="0.0271%" height="15" fill="rgb(216,193,19)" fg:x="114" fg:w="1"/><text x="3.3445%" y="207.50"></text></g><g><title>app`&lt;[u64] as rand::rng::Fill&gt;::try_fill (1 samples, 0.03%)</title><rect x="3.0945%" y="181" width="0.0271%" height="15" fill="rgb(216,135,14)" fg:x="114" fg:w="1"/><text x="3.3445%" y="191.50"></text></g><g><title>app`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (2 samples, 0.05%)</title><rect x="3.1759%" y="165" width="0.0543%" height="15" fill="rgb(241,47,5)" fg:x="117" fg:w="2"/><text x="3.4259%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="3.2030%" y="149" width="0.0271%" height="15" fill="rgb(233,42,35)" fg:x="118" fg:w="1"/><text x="3.4530%" y="159.50"></text></g><g><title>app`compiler_builtins::int::specialized_div_rem::u128_div_rem (1 samples, 0.03%)</title><rect x="3.2302%" y="165" width="0.0271%" height="15" fill="rgb(231,13,6)" fg:x="119" fg:w="1"/><text x="3.4802%" y="175.50"></text></g><g><title>app`num_bigint_dig::algorithms::div::div_rem (4 samples, 0.11%)</title><rect x="3.1759%" y="181" width="0.1086%" height="15" fill="rgb(207,181,40)" fg:x="117" fg:w="4"/><text x="3.4259%" y="191.50"></text></g><g><title>app`num_bigint_dig::algorithms::mul::mul3 (1 samples, 0.03%)</title><rect x="3.2573%" y="165" width="0.0271%" height="15" fill="rgb(254,173,49)" fg:x="120" fg:w="1"/><text x="3.5073%" y="175.50"></text></g><g><title>app`num_bigint_dig::algorithms::mac::mac3 (1 samples, 0.03%)</title><rect x="3.2573%" y="149" width="0.0271%" height="15" fill="rgb(221,1,38)" fg:x="120" fg:w="1"/><text x="3.5073%" y="159.50"></text></g><g><title>app`num_bigint_dig::biguint::monty::montgomery (960 samples, 26.06%)</title><rect x="3.2845%" y="181" width="26.0586%" height="15" fill="rgb(206,124,46)" fg:x="121" fg:w="960"/><text x="3.5345%" y="191.50">app`num_bigint_dig::biguint::monty::montgo..</text></g><g><title>app`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (10 samples, 0.27%)</title><rect x="29.0717%" y="165" width="0.2714%" height="15" fill="rgb(249,21,11)" fg:x="1071" fg:w="10"/><text x="29.3217%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="29.3160%" y="149" width="0.0271%" height="15" fill="rgb(222,201,40)" fg:x="1080" fg:w="1"/><text x="29.5660%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.03%)</title><rect x="29.3431%" y="181" width="0.0271%" height="15" fill="rgb(235,61,29)" fg:x="1081" fg:w="1"/><text x="29.5931%" y="191.50"></text></g><g><title>app`num_bigint_dig::prime::probably_prime_miller_rabin (969 samples, 26.30%)</title><rect x="3.0945%" y="213" width="26.3029%" height="15" fill="rgb(219,207,3)" fg:x="114" fg:w="969"/><text x="3.3445%" y="223.50">app`num_bigint_dig::prime::probably_prime_..</text></g><g><title>app`num_bigint_dig::biguint::monty::monty_modpow (968 samples, 26.28%)</title><rect x="3.1216%" y="197" width="26.2758%" height="15" fill="rgb(222,56,46)" fg:x="115" fg:w="968"/><text x="3.3716%" y="207.50">app`num_bigint_dig::biguint::monty::monty_..</text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.03%)</title><rect x="29.3702%" y="181" width="0.0271%" height="15" fill="rgb(239,76,54)" fg:x="1082" fg:w="1"/><text x="29.6202%" y="191.50"></text></g><g><title>app`&lt;R as num_bigint_dig::bigrand::RandPrime&gt;::gen_prime (1,040 samples, 28.23%)</title><rect x="1.1944%" y="245" width="28.2302%" height="15" fill="rgb(231,124,27)" fg:x="44" fg:w="1040"/><text x="1.4444%" y="255.50">app`&lt;R as num_bigint_dig::bigrand::RandPrime&gt;..</text></g><g><title>app`num_bigint_dig::prime::probably_prime (1,039 samples, 28.20%)</title><rect x="1.2215%" y="229" width="28.2030%" height="15" fill="rgb(249,195,6)" fg:x="45" fg:w="1039"/><text x="1.4715%" y="239.50">app`num_bigint_dig::prime::probably_prime</text></g><g><title>app`spin::once::Once&lt;T&gt;::call_once (1 samples, 0.03%)</title><rect x="29.3974%" y="213" width="0.0271%" height="15" fill="rgb(237,174,47)" fg:x="1083" fg:w="1"/><text x="29.6474%" y="223.50"></text></g><g><title>app`num_bigint_dig::algorithms::gcd::lehmer_simulate (1 samples, 0.03%)</title><rect x="29.4245%" y="165" width="0.0271%" height="15" fill="rgb(206,201,31)" fg:x="1084" fg:w="1"/><text x="29.6745%" y="175.50"></text></g><g><title>app`backend::model::key_pair::generate_key_pair (1,043 samples, 28.31%)</title><rect x="1.1672%" y="277" width="28.3116%" height="15" fill="rgb(231,57,52)" fg:x="43" fg:w="1043"/><text x="1.4172%" y="287.50">app`backend::model::key_pair::generate_key_pa..</text></g><g><title>app`rsa::algorithms::generate_multi_prime_key (1,042 samples, 28.28%)</title><rect x="1.1944%" y="261" width="28.2845%" height="15" fill="rgb(248,177,22)" fg:x="44" fg:w="1042"/><text x="1.4444%" y="271.50">app`rsa::algorithms::generate_multi_prime_key</text></g><g><title>app`rsa::key::RsaPrivateKey::from_components (2 samples, 0.05%)</title><rect x="29.4245%" y="245" width="0.0543%" height="15" fill="rgb(215,211,37)" fg:x="1084" fg:w="2"/><text x="29.6745%" y="255.50"></text></g><g><title>app`rsa::key::RsaPrivateKey::precompute (2 samples, 0.05%)</title><rect x="29.4245%" y="229" width="0.0543%" height="15" fill="rgb(241,128,51)" fg:x="1084" fg:w="2"/><text x="29.6745%" y="239.50"></text></g><g><title>app`&lt;num_bigint_dig::biguint::BigUint as num_bigint_dig::traits::ModInverse&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::mod_inverse (2 samples, 0.05%)</title><rect x="29.4245%" y="213" width="0.0543%" height="15" fill="rgb(227,165,31)" fg:x="1084" fg:w="2"/><text x="29.6745%" y="223.50"></text></g><g><title>app`num_bigint_dig::algorithms::mod_inverse::mod_inverse (2 samples, 0.05%)</title><rect x="29.4245%" y="197" width="0.0543%" height="15" fill="rgb(228,167,24)" fg:x="1084" fg:w="2"/><text x="29.6745%" y="207.50"></text></g><g><title>app`num_bigint_dig::algorithms::gcd::extended_gcd (2 samples, 0.05%)</title><rect x="29.4245%" y="181" width="0.0543%" height="15" fill="rgb(228,143,12)" fg:x="1084" fg:w="2"/><text x="29.6745%" y="191.50"></text></g><g><title>app`num_bigint_dig::algorithms::gcd::lehmer_update (1 samples, 0.03%)</title><rect x="29.4517%" y="165" width="0.0271%" height="15" fill="rgb(249,149,8)" fg:x="1085" fg:w="1"/><text x="29.7017%" y="175.50"></text></g><g><title>app`&lt;&amp;mut num_bigint_dig::bigint::BigInt as core::ops::arith::Add&lt;&amp;mut num_bigint_dig::bigint::BigInt&gt;&gt;::add (1 samples, 0.03%)</title><rect x="29.4517%" y="149" width="0.0271%" height="15" fill="rgb(243,35,44)" fg:x="1085" fg:w="1"/><text x="29.7017%" y="159.50"></text></g><g><title>app`blowfish::Blowfish::bc_expand_key (12 samples, 0.33%)</title><rect x="29.4788%" y="229" width="0.3257%" height="15" fill="rgb(246,89,9)" fg:x="1086" fg:w="12"/><text x="29.7288%" y="239.50"></text></g><g><title>app`blowfish::Blowfish&lt;T&gt;::encrypt (539 samples, 14.63%)</title><rect x="29.8046%" y="229" width="14.6308%" height="15" fill="rgb(233,213,13)" fg:x="1098" fg:w="539"/><text x="30.0546%" y="239.50">app`blowfish::Blowfish..</text></g><g><title>app`backend::routes::login::verify_password (552 samples, 14.98%)</title><rect x="29.4788%" y="277" width="14.9837%" height="15" fill="rgb(233,141,41)" fg:x="1086" fg:w="552"/><text x="29.7288%" y="287.50">app`backend::routes::lo..</text></g><g><title>app`bcrypt::_hash_password (552 samples, 14.98%)</title><rect x="29.4788%" y="261" width="14.9837%" height="15" fill="rgb(239,167,4)" fg:x="1086" fg:w="552"/><text x="29.7288%" y="271.50">app`bcrypt::_hash_passw..</text></g><g><title>app`bcrypt::bcrypt::bcrypt (552 samples, 14.98%)</title><rect x="29.4788%" y="245" width="14.9837%" height="15" fill="rgb(209,217,16)" fg:x="1086" fg:w="552"/><text x="29.7288%" y="255.50">app`bcrypt::bcrypt::bcr..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="44.4354%" y="229" width="0.0271%" height="15" fill="rgb(219,88,35)" fg:x="1637" fg:w="1"/><text x="44.6854%" y="239.50"></text></g><g><title>app`blowfish::Blowfish::bc_expand_key (49 samples, 1.33%)</title><rect x="44.4625%" y="213" width="1.3301%" height="15" fill="rgb(220,193,23)" fg:x="1638" fg:w="49"/><text x="44.7125%" y="223.50"></text></g><g><title>app`backend::routes::signup::hash_password (1,945 samples, 52.80%)</title><rect x="44.4625%" y="277" width="52.7959%" height="15" fill="rgb(230,90,52)" fg:x="1638" fg:w="1945"/><text x="44.7125%" y="287.50">app`backend::routes::signup::hash_password</text></g><g><title>app`bcrypt::hash (1,945 samples, 52.80%)</title><rect x="44.4625%" y="261" width="52.7959%" height="15" fill="rgb(252,106,19)" fg:x="1638" fg:w="1945"/><text x="44.7125%" y="271.50">app`bcrypt::hash</text></g><g><title>app`bcrypt::_hash_password (1,945 samples, 52.80%)</title><rect x="44.4625%" y="245" width="52.7959%" height="15" fill="rgb(206,74,20)" fg:x="1638" fg:w="1945"/><text x="44.7125%" y="255.50">app`bcrypt::_hash_password</text></g><g><title>app`bcrypt::bcrypt::bcrypt (1,945 samples, 52.80%)</title><rect x="44.4625%" y="229" width="52.7959%" height="15" fill="rgb(230,138,44)" fg:x="1638" fg:w="1945"/><text x="44.7125%" y="239.50">app`bcrypt::bcrypt::bcrypt</text></g><g><title>app`blowfish::Blowfish&lt;T&gt;::encrypt (1,896 samples, 51.47%)</title><rect x="45.7926%" y="213" width="51.4658%" height="15" fill="rgb(235,182,43)" fg:x="1687" fg:w="1896"/><text x="46.0426%" y="223.50">app`blowfish::Blowfish&lt;T&gt;::encrypt</text></g><g><title>app`&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="97.2584%" y="197" width="0.0271%" height="15" fill="rgb(242,16,51)" fg:x="3583" fg:w="1"/><text x="97.5084%" y="207.50"></text></g><g><title>app`actix_web::handler::handler_service::_{{closure}}::_{{closure}} (3,552 samples, 96.42%)</title><rect x="0.8958%" y="293" width="96.4169%" height="15" fill="rgb(248,9,4)" fg:x="33" fg:w="3552"/><text x="1.1458%" y="303.50">app`actix_web::handler::handler_service::_{{closure}}::_{{closure}}</text></g><g><title>app`backend::service::user_profile::user_profile_service::_{{closure}} (2 samples, 0.05%)</title><rect x="97.2584%" y="277" width="0.0543%" height="15" fill="rgb(210,31,22)" fg:x="3583" fg:w="2"/><text x="97.5084%" y="287.50"></text></g><g><title>app`&lt;sqlx_core::pool::Pool&lt;sqlx_core::postgres::database::Postgres&gt; as backend::model::user::UserRepository&gt;::get_user_by_name::_{{closure}} (2 samples, 0.05%)</title><rect x="97.2584%" y="261" width="0.0543%" height="15" fill="rgb(239,54,39)" fg:x="3583" fg:w="2"/><text x="97.5084%" y="271.50"></text></g><g><title>app`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (2 samples, 0.05%)</title><rect x="97.2584%" y="245" width="0.0543%" height="15" fill="rgb(230,99,41)" fg:x="3583" fg:w="2"/><text x="97.5084%" y="255.50"></text></g><g><title>app`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.05%)</title><rect x="97.2584%" y="229" width="0.0543%" height="15" fill="rgb(253,106,12)" fg:x="3583" fg:w="2"/><text x="97.5084%" y="239.50"></text></g><g><title>app`sqlx_core::pool::executor::_&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_optional::_{{closure}} (2 samples, 0.05%)</title><rect x="97.2584%" y="213" width="0.0543%" height="15" fill="rgb(213,46,41)" fg:x="3583" fg:w="2"/><text x="97.5084%" y="223.50"></text></g><g><title>app`sqlx_core::postgres::connection::executor::_&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_optional::_{{closure}} (1 samples, 0.03%)</title><rect x="97.2856%" y="197" width="0.0271%" height="15" fill="rgb(215,133,35)" fg:x="3584" fg:w="1"/><text x="97.5356%" y="207.50"></text></g><g><title>app`&lt;sqlx_core::io::write_and_flush::WriteAndFlush&lt;S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="97.2856%" y="181" width="0.0271%" height="15" fill="rgb(213,28,5)" fg:x="3584" fg:w="1"/><text x="97.5356%" y="191.50"></text></g><g><title>app`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1 samples, 0.03%)</title><rect x="97.2856%" y="165" width="0.0271%" height="15" fill="rgb(215,77,49)" fg:x="3584" fg:w="1"/><text x="97.5356%" y="175.50"></text></g><g><title>app`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.03%)</title><rect x="97.2856%" y="149" width="0.0271%" height="15" fill="rgb(248,100,22)" fg:x="3584" fg:w="1"/><text x="97.5356%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (1 samples, 0.03%)</title><rect x="97.2856%" y="133" width="0.0271%" height="15" fill="rgb(208,67,9)" fg:x="3584" fg:w="1"/><text x="97.5356%" y="143.50"></text></g><g><title>app`&lt;actix_web::scope::Scope&lt;T&gt; as actix_web::service::HttpServiceFactory&gt;::register::_{{closure}}::_{{closure}} (3,553 samples, 96.44%)</title><rect x="0.8958%" y="325" width="96.4441%" height="15" fill="rgb(219,133,21)" fg:x="33" fg:w="3553"/><text x="1.1458%" y="335.50">app`&lt;actix_web::scope::Scope&lt;T&gt; as actix_web::service::HttpServiceFactory&gt;::register::_{{closure}}::_{{closure}}</text></g><g><title>app`&lt;actix_web::resource::Resource&lt;T&gt; as actix_web::service::HttpServiceFactory&gt;::register::_{{closure}}::_{{closure}} (3,553 samples, 96.44%)</title><rect x="0.8958%" y="309" width="96.4441%" height="15" fill="rgb(246,46,29)" fg:x="33" fg:w="3553"/><text x="1.1458%" y="319.50">app`&lt;actix_web::resource::Resource&lt;T&gt; as actix_web::service::HttpServiceFactory&gt;::register::_{{closure}}::_{{closure}}</text></g><g><title>app`chrono::offset::utc::Utc::now (1 samples, 0.03%)</title><rect x="97.3127%" y="293" width="0.0271%" height="15" fill="rgb(246,185,52)" fg:x="3585" fg:w="1"/><text x="97.5627%" y="303.50"></text></g><g><title>app`actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_response (3,559 samples, 96.61%)</title><rect x="0.7600%" y="373" width="96.6069%" height="15" fill="rgb(252,136,11)" fg:x="28" fg:w="3559"/><text x="1.0100%" y="383.50">app`actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_response</text></g><g><title>app`tracing::span::Span::in_scope (3,558 samples, 96.58%)</title><rect x="0.7872%" y="357" width="96.5798%" height="15" fill="rgb(219,138,53)" fg:x="29" fg:w="3558"/><text x="1.0372%" y="367.50">app`tracing::span::Span::in_scope</text></g><g><title>app`&lt;actix_session::middleware::InnerSessionMiddleware&lt;S,Store&gt; as actix_service::Service&lt;actix_web::service::ServiceRequest&gt;&gt;::call::_{{closure}} (3,558 samples, 96.58%)</title><rect x="0.7872%" y="341" width="96.5798%" height="15" fill="rgb(211,51,23)" fg:x="29" fg:w="3558"/><text x="1.0372%" y="351.50">app`&lt;actix_session::middleware::InnerSessionMiddleware&lt;S,Store&gt; as actix_service::Service&lt;actix_web::service::ServiceRequest&gt;&gt;::call::_{{closure}}</text></g><g><title>app`actix_session::middleware::set_session_cookie (1 samples, 0.03%)</title><rect x="97.3398%" y="325" width="0.0271%" height="15" fill="rgb(247,221,28)" fg:x="3586" fg:w="1"/><text x="97.5898%" y="335.50"></text></g><g><title>app`cookie::secure::private::PrivateJar&lt;J&gt;::add (1 samples, 0.03%)</title><rect x="97.3398%" y="309" width="0.0271%" height="15" fill="rgb(251,222,45)" fg:x="3586" fg:w="1"/><text x="97.5898%" y="319.50"></text></g><g><title>app`cookie::CookieStr::to_str (1 samples, 0.03%)</title><rect x="97.3398%" y="293" width="0.0271%" height="15" fill="rgb(217,162,53)" fg:x="3586" fg:w="1"/><text x="97.5898%" y="303.50"></text></g><g><title>app`&lt;actix_http::h1::dispatcher::Dispatcher&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (3,569 samples, 96.88%)</title><rect x="0.5157%" y="389" width="96.8784%" height="15" fill="rgb(229,93,14)" fg:x="19" fg:w="3569"/><text x="0.7657%" y="399.50">app`&lt;actix_http::h1::dispatcher::Dispatcher&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll</text></g><g><title>app`tokio_util::util::poll_read_buf (1 samples, 0.03%)</title><rect x="97.3670%" y="373" width="0.0271%" height="15" fill="rgb(209,67,49)" fg:x="3587" fg:w="1"/><text x="97.6170%" y="383.50"></text></g><g><title>app`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.03%)</title><rect x="97.3670%" y="357" width="0.0271%" height="15" fill="rgb(213,87,29)" fg:x="3587" fg:w="1"/><text x="97.6170%" y="367.50"></text></g><g><title>app`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.03%)</title><rect x="97.3670%" y="341" width="0.0271%" height="15" fill="rgb(205,151,52)" fg:x="3587" fg:w="1"/><text x="97.6170%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (1 samples, 0.03%)</title><rect x="97.3670%" y="325" width="0.0271%" height="15" fill="rgb(253,215,39)" fg:x="3587" fg:w="1"/><text x="97.6170%" y="335.50"></text></g><g><title>app`&lt;F as actix_server::service::ServerServiceFactory&lt;I&gt;&gt;::create (1 samples, 0.03%)</title><rect x="97.3941%" y="373" width="0.0271%" height="15" fill="rgb(221,220,41)" fg:x="3588" fg:w="1"/><text x="97.6441%" y="383.50"></text></g><g><title>app`actix_http::extensions::Extensions::insert (1 samples, 0.03%)</title><rect x="97.3941%" y="357" width="0.0271%" height="15" fill="rgb(218,133,21)" fg:x="3588" fg:w="1"/><text x="97.6441%" y="367.50"></text></g><g><title>app`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.03%)</title><rect x="97.3941%" y="341" width="0.0271%" height="15" fill="rgb(221,193,43)" fg:x="3588" fg:w="1"/><text x="97.6441%" y="351.50"></text></g><g><title>app`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.03%)</title><rect x="97.3941%" y="325" width="0.0271%" height="15" fill="rgb(240,128,52)" fg:x="3588" fg:w="1"/><text x="97.6441%" y="335.50"></text></g><g><title>app`regex::literal::imp::LiteralSearcher::prefixes (1 samples, 0.03%)</title><rect x="97.4213%" y="213" width="0.0271%" height="15" fill="rgb(253,114,12)" fg:x="3589" fg:w="1"/><text x="97.6713%" y="223.50"></text></g><g><title>app`regex::literal::imp::LiteralSearcher::new (1 samples, 0.03%)</title><rect x="97.4213%" y="197" width="0.0271%" height="15" fill="rgb(215,223,47)" fg:x="3589" fg:w="1"/><text x="97.6713%" y="207.50"></text></g><g><title>app`regex::literal::imp::Memmem::new (1 samples, 0.03%)</title><rect x="97.4213%" y="181" width="0.0271%" height="15" fill="rgb(248,225,23)" fg:x="3589" fg:w="1"/><text x="97.6713%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="97.4213%" y="165" width="0.0271%" height="15" fill="rgb(250,108,0)" fg:x="3589" fg:w="1"/><text x="97.6713%" y="175.50"></text></g><g><title>app`&lt;backend::routes::follow::get_followers_by_user_name as actix_web::service::HttpServiceFactory&gt;::register (2 samples, 0.05%)</title><rect x="97.4213%" y="309" width="0.0543%" height="15" fill="rgb(228,208,7)" fg:x="3589" fg:w="2"/><text x="97.6713%" y="319.50"></text></g><g><title>app`&lt;actix_web::resource::Resource&lt;T&gt; as actix_web::service::HttpServiceFactory&gt;::register (2 samples, 0.05%)</title><rect x="97.4213%" y="293" width="0.0543%" height="15" fill="rgb(244,45,10)" fg:x="3589" fg:w="2"/><text x="97.6713%" y="303.50"></text></g><g><title>app`actix_router::resource::ResourceDef::new (2 samples, 0.05%)</title><rect x="97.4213%" y="277" width="0.0543%" height="15" fill="rgb(207,125,25)" fg:x="3589" fg:w="2"/><text x="97.6713%" y="287.50"></text></g><g><title>app`actix_router::resource::ResourceDef::parse (2 samples, 0.05%)</title><rect x="97.4213%" y="261" width="0.0543%" height="15" fill="rgb(210,195,18)" fg:x="3589" fg:w="2"/><text x="97.6713%" y="271.50"></text></g><g><title>app`regex::re_unicode::Regex::new (2 samples, 0.05%)</title><rect x="97.4213%" y="245" width="0.0543%" height="15" fill="rgb(249,80,12)" fg:x="3589" fg:w="2"/><text x="97.6713%" y="255.50"></text></g><g><title>app`regex::exec::ExecBuilder::build (2 samples, 0.05%)</title><rect x="97.4213%" y="229" width="0.0543%" height="15" fill="rgb(221,65,9)" fg:x="3589" fg:w="2"/><text x="97.6713%" y="239.50"></text></g><g><title>app`regex_syntax::hir::literal::Literals::union_prefixes (1 samples, 0.03%)</title><rect x="97.4484%" y="213" width="0.0271%" height="15" fill="rgb(235,49,36)" fg:x="3590" fg:w="1"/><text x="97.6984%" y="223.50"></text></g><g><title>app`regex_syntax::hir::literal::prefixes (1 samples, 0.03%)</title><rect x="97.4484%" y="197" width="0.0271%" height="15" fill="rgb(225,32,20)" fg:x="3590" fg:w="1"/><text x="97.6984%" y="207.50"></text></g><g><title>app`regex_syntax::hir::literal::prefixes (1 samples, 0.03%)</title><rect x="97.4484%" y="181" width="0.0271%" height="15" fill="rgb(215,141,46)" fg:x="3590" fg:w="1"/><text x="97.6984%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="97.4484%" y="165" width="0.0271%" height="15" fill="rgb(250,160,47)" fg:x="3590" fg:w="1"/><text x="97.6984%" y="175.50"></text></g><g><title>app`regex::compile::Compiler::c (1 samples, 0.03%)</title><rect x="97.4756%" y="197" width="0.0271%" height="15" fill="rgb(216,222,40)" fg:x="3591" fg:w="1"/><text x="97.7256%" y="207.50"></text></g><g><title>app`regex::compile::Compiler::c (1 samples, 0.03%)</title><rect x="97.4756%" y="181" width="0.0271%" height="15" fill="rgb(234,217,39)" fg:x="3591" fg:w="1"/><text x="97.7256%" y="191.50"></text></g><g><title>app`regex::compile::Compiler::fill (1 samples, 0.03%)</title><rect x="97.4756%" y="165" width="0.0271%" height="15" fill="rgb(207,178,40)" fg:x="3591" fg:w="1"/><text x="97.7256%" y="175.50"></text></g><g><title>app`&lt;backend::routes::user_profile::user_profile as actix_web::service::HttpServiceFactory&gt;::register (2 samples, 0.05%)</title><rect x="97.4756%" y="309" width="0.0543%" height="15" fill="rgb(221,136,13)" fg:x="3591" fg:w="2"/><text x="97.7256%" y="319.50"></text></g><g><title>app`&lt;actix_web::resource::Resource&lt;T&gt; as actix_web::service::HttpServiceFactory&gt;::register (2 samples, 0.05%)</title><rect x="97.4756%" y="293" width="0.0543%" height="15" fill="rgb(249,199,10)" fg:x="3591" fg:w="2"/><text x="97.7256%" y="303.50"></text></g><g><title>app`actix_router::resource::ResourceDef::new (2 samples, 0.05%)</title><rect x="97.4756%" y="277" width="0.0543%" height="15" fill="rgb(249,222,13)" fg:x="3591" fg:w="2"/><text x="97.7256%" y="287.50"></text></g><g><title>app`actix_router::resource::ResourceDef::parse (2 samples, 0.05%)</title><rect x="97.4756%" y="261" width="0.0543%" height="15" fill="rgb(244,185,38)" fg:x="3591" fg:w="2"/><text x="97.7256%" y="271.50"></text></g><g><title>app`regex::re_unicode::Regex::new (2 samples, 0.05%)</title><rect x="97.4756%" y="245" width="0.0543%" height="15" fill="rgb(236,202,9)" fg:x="3591" fg:w="2"/><text x="97.7256%" y="255.50"></text></g><g><title>app`regex::exec::ExecBuilder::build (2 samples, 0.05%)</title><rect x="97.4756%" y="229" width="0.0543%" height="15" fill="rgb(250,229,37)" fg:x="3591" fg:w="2"/><text x="97.7256%" y="239.50"></text></g><g><title>app`regex::compile::Compiler::compile (2 samples, 0.05%)</title><rect x="97.4756%" y="213" width="0.0543%" height="15" fill="rgb(206,174,23)" fg:x="3591" fg:w="2"/><text x="97.7256%" y="223.50"></text></g><g><title>app`regex::compile::Compiler::compile_finish (1 samples, 0.03%)</title><rect x="97.5027%" y="197" width="0.0271%" height="15" fill="rgb(211,33,43)" fg:x="3592" fg:w="1"/><text x="97.7527%" y="207.50"></text></g><g><title>app`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="97.5027%" y="181" width="0.0271%" height="15" fill="rgb(245,58,50)" fg:x="3592" fg:w="1"/><text x="97.7527%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="97.5027%" y="165" width="0.0271%" height="15" fill="rgb(244,68,36)" fg:x="3592" fg:w="1"/><text x="97.7527%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="97.5027%" y="149" width="0.0271%" height="15" fill="rgb(232,229,15)" fg:x="3592" fg:w="1"/><text x="97.7527%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="97.5027%" y="133" width="0.0271%" height="15" fill="rgb(254,30,23)" fg:x="3592" fg:w="1"/><text x="97.7527%" y="143.50"></text></g><g><title>app`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3,577 samples, 97.10%)</title><rect x="0.4615%" y="405" width="97.0955%" height="15" fill="rgb(235,160,14)" fg:x="17" fg:w="3577"/><text x="0.7115%" y="415.50">app`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>app`&lt;actix_server::service::StreamNewService&lt;F,Io&gt; as actix_server::service::InternalServiceFactory&gt;::create (6 samples, 0.16%)</title><rect x="97.3941%" y="389" width="0.1629%" height="15" fill="rgb(212,155,44)" fg:x="3588" fg:w="6"/><text x="97.6441%" y="399.50"></text></g><g><title>app`&lt;actix_http::service::HttpService&lt;T,S,B,X,U&gt; as actix_service::ServiceFactory&lt;(T,actix_http::Protocol,core::option::Option&lt;std::net::socket_addr::SocketAddr&gt;)&gt;&gt;::new_service (5 samples, 0.14%)</title><rect x="97.4213%" y="373" width="0.1357%" height="15" fill="rgb(226,2,50)" fg:x="3589" fg:w="5"/><text x="97.6713%" y="383.50"></text></g><g><title>app`&lt;actix_web::app_service::AppInit&lt;T,B&gt; as actix_service::ServiceFactory&lt;actix_http::requests::request::Request&gt;&gt;::new_service (5 samples, 0.14%)</title><rect x="97.4213%" y="357" width="0.1357%" height="15" fill="rgb(234,177,6)" fg:x="3589" fg:w="5"/><text x="97.6713%" y="367.50"></text></g><g><title>app`&lt;actix_web::service::ServiceFactoryWrapper&lt;T&gt; as actix_web::service::AppServiceFactory&gt;::register (5 samples, 0.14%)</title><rect x="97.4213%" y="341" width="0.1357%" height="15" fill="rgb(217,24,9)" fg:x="3589" fg:w="5"/><text x="97.6713%" y="351.50"></text></g><g><title>app`&lt;actix_web::scope::Scope&lt;T&gt; as actix_web::service::HttpServiceFactory&gt;::register (5 samples, 0.14%)</title><rect x="97.4213%" y="325" width="0.1357%" height="15" fill="rgb(220,13,46)" fg:x="3589" fg:w="5"/><text x="97.6713%" y="335.50"></text></g><g><title>app`&lt;backend::routes::webfinger::webfinger as actix_web::service::HttpServiceFactory&gt;::register (1 samples, 0.03%)</title><rect x="97.5299%" y="309" width="0.0271%" height="15" fill="rgb(239,221,27)" fg:x="3593" fg:w="1"/><text x="97.7799%" y="319.50"></text></g><g><title>app`&lt;actix_web::resource::Resource&lt;T&gt; as actix_web::service::HttpServiceFactory&gt;::register (1 samples, 0.03%)</title><rect x="97.5299%" y="293" width="0.0271%" height="15" fill="rgb(222,198,25)" fg:x="3593" fg:w="1"/><text x="97.7799%" y="303.50"></text></g><g><title>app`&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (1 samples, 0.03%)</title><rect x="97.5841%" y="357" width="0.0271%" height="15" fill="rgb(211,99,13)" fg:x="3595" fg:w="1"/><text x="97.8341%" y="367.50"></text></g><g><title>app`tokio::task::local::LocalSet::tick (3,583 samples, 97.26%)</title><rect x="0.4343%" y="453" width="97.2584%" height="15" fill="rgb(232,111,31)" fg:x="16" fg:w="3583"/><text x="0.6843%" y="463.50">app`tokio::task::local::LocalSet::tick</text></g><g><title>app`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3,583 samples, 97.26%)</title><rect x="0.4343%" y="437" width="97.2584%" height="15" fill="rgb(245,82,37)" fg:x="16" fg:w="3583"/><text x="0.6843%" y="447.50">app`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>app`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (3,583 samples, 97.26%)</title><rect x="0.4343%" y="421" width="97.2584%" height="15" fill="rgb(227,149,46)" fg:x="16" fg:w="3583"/><text x="0.6843%" y="431.50">app`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>app`tokio::time::interval::Interval::poll_tick (5 samples, 0.14%)</title><rect x="97.5570%" y="405" width="0.1357%" height="15" fill="rgb(218,36,50)" fg:x="3594" fg:w="5"/><text x="97.8070%" y="415.50"></text></g><g><title>app`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (5 samples, 0.14%)</title><rect x="97.5570%" y="389" width="0.1357%" height="15" fill="rgb(226,80,48)" fg:x="3594" fg:w="5"/><text x="97.8070%" y="399.50"></text></g><g><title>app`tokio::runtime::time::entry::TimerEntry::reset (5 samples, 0.14%)</title><rect x="97.5570%" y="373" width="0.1357%" height="15" fill="rgb(238,224,15)" fg:x="3594" fg:w="5"/><text x="97.8070%" y="383.50"></text></g><g><title>app`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (3 samples, 0.08%)</title><rect x="97.6113%" y="357" width="0.0814%" height="15" fill="rgb(241,136,10)" fg:x="3596" fg:w="3"/><text x="97.8613%" y="367.50"></text></g><g><title>app`tokio::runtime::driver::IoHandle::unpark (3 samples, 0.08%)</title><rect x="97.6113%" y="341" width="0.0814%" height="15" fill="rgb(208,32,45)" fg:x="3596" fg:w="3"/><text x="97.8613%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`kevent (3 samples, 0.08%)</title><rect x="97.6113%" y="325" width="0.0814%" height="15" fill="rgb(207,135,9)" fg:x="3596" fg:w="3"/><text x="97.8613%" y="335.50"></text></g><g><title>app`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,588 samples, 97.39%)</title><rect x="0.3257%" y="485" width="97.3941%" height="15" fill="rgb(206,86,44)" fg:x="12" fg:w="3588"/><text x="0.5757%" y="495.50">app`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>app`std::thread::local::LocalKey&lt;T&gt;::with (3,588 samples, 97.39%)</title><rect x="0.3257%" y="469" width="97.3941%" height="15" fill="rgb(245,177,15)" fg:x="12" fg:w="3588"/><text x="0.5757%" y="479.50">app`std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>app`tokio::util::wake::clone_arc_raw (1 samples, 0.03%)</title><rect x="97.6927%" y="453" width="0.0271%" height="15" fill="rgb(206,64,50)" fg:x="3599" fg:w="1"/><text x="97.9427%" y="463.50"></text></g><g><title>app`tokio::runtime::scheduler::current_thread::Context::enter (3,589 samples, 97.42%)</title><rect x="0.3257%" y="501" width="97.4213%" height="15" fill="rgb(234,36,40)" fg:x="12" fg:w="3589"/><text x="0.5757%" y="511.50">app`tokio::runtime::scheduler::current_thread::Context::enter</text></g><g><title>app`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="97.7199%" y="485" width="0.0271%" height="15" fill="rgb(213,64,8)" fg:x="3600" fg:w="1"/><text x="97.9699%" y="495.50"></text></g><g><title>app`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.03%)</title><rect x="97.8013%" y="485" width="0.0271%" height="15" fill="rgb(210,75,36)" fg:x="3603" fg:w="1"/><text x="98.0513%" y="495.50"></text></g><g><title>app`std::time::Instant::now (2 samples, 0.05%)</title><rect x="97.8284%" y="485" width="0.0543%" height="15" fill="rgb(229,88,21)" fg:x="3604" fg:w="2"/><text x="98.0784%" y="495.50"></text></g><g><title>app`tokio::runtime::context::with_defer (3 samples, 0.08%)</title><rect x="97.8827%" y="485" width="0.0814%" height="15" fill="rgb(252,204,47)" fg:x="3606" fg:w="3"/><text x="98.1327%" y="495.50"></text></g><g><title>app`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="97.9370%" y="469" width="0.0271%" height="15" fill="rgb(208,77,27)" fg:x="3608" fg:w="1"/><text x="98.1870%" y="479.50"></text></g><g><title>app`tokio::runtime::signal::Driver::process (1 samples, 0.03%)</title><rect x="97.9642%" y="485" width="0.0271%" height="15" fill="rgb(221,76,26)" fg:x="3609" fg:w="1"/><text x="98.2142%" y="495.50"></text></g><g><title>app`mio::event::events::Events::iter (2 samples, 0.05%)</title><rect x="98.0185%" y="469" width="0.0543%" height="15" fill="rgb(225,139,18)" fg:x="3611" fg:w="2"/><text x="98.2685%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.03%)</title><rect x="98.0727%" y="437" width="0.0271%" height="15" fill="rgb(230,137,11)" fg:x="3613" fg:w="1"/><text x="98.3227%" y="447.50"></text></g><g><title>app`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.05%)</title><rect x="98.0727%" y="469" width="0.0543%" height="15" fill="rgb(212,28,1)" fg:x="3613" fg:w="2"/><text x="98.3227%" y="479.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (2 samples, 0.05%)</title><rect x="98.0727%" y="453" width="0.0543%" height="15" fill="rgb(248,164,17)" fg:x="3613" fg:w="2"/><text x="98.3227%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (1 samples, 0.03%)</title><rect x="98.0999%" y="437" width="0.0271%" height="15" fill="rgb(222,171,42)" fg:x="3614" fg:w="1"/><text x="98.3499%" y="447.50"></text></g><g><title>app`std::time::Instant::checked_duration_since (1 samples, 0.03%)</title><rect x="98.1270%" y="469" width="0.0271%" height="15" fill="rgb(243,84,45)" fg:x="3615" fg:w="1"/><text x="98.3770%" y="479.50"></text></g><g><title>app`std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.03%)</title><rect x="98.1270%" y="453" width="0.0271%" height="15" fill="rgb(252,49,23)" fg:x="3615" fg:w="1"/><text x="98.3770%" y="463.50"></text></g><g><title>app`DYLD-STUB$$kevent (1 samples, 0.03%)</title><rect x="98.2899%" y="453" width="0.0271%" height="15" fill="rgb(215,19,7)" fg:x="3621" fg:w="1"/><text x="98.5399%" y="463.50"></text></g><g><title>app`mio::poll::Poll::poll (1 samples, 0.03%)</title><rect x="98.3170%" y="453" width="0.0271%" height="15" fill="rgb(238,81,41)" fg:x="3622" fg:w="1"/><text x="98.5670%" y="463.50"></text></g><g><title>app`tokio::runtime::io::Driver::turn (46 samples, 1.25%)</title><rect x="98.1542%" y="469" width="1.2486%" height="15" fill="rgb(210,199,37)" fg:x="3616" fg:w="46"/><text x="98.4042%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`kevent (39 samples, 1.06%)</title><rect x="98.3442%" y="453" width="1.0586%" height="15" fill="rgb(244,192,49)" fg:x="3623" fg:w="39"/><text x="98.5942%" y="463.50"></text></g><g><title>app`tokio::runtime::signal::Driver::process (1 samples, 0.03%)</title><rect x="99.4028%" y="469" width="0.0271%" height="15" fill="rgb(226,211,11)" fg:x="3662" fg:w="1"/><text x="99.6528%" y="479.50"></text></g><g><title>app`tokio::runtime::task::raw::schedule (1 samples, 0.03%)</title><rect x="99.4843%" y="453" width="0.0271%" height="15" fill="rgb(236,162,54)" fg:x="3665" fg:w="1"/><text x="99.7343%" y="463.50"></text></g><g><title>app`&lt;tokio::runtime::scheduler::current_thread::Handle as tokio::util::wake::Wake&gt;::wake (6 samples, 0.16%)</title><rect x="99.5114%" y="421" width="0.1629%" height="15" fill="rgb(220,229,9)" fg:x="3666" fg:w="6"/><text x="99.7614%" y="431.50"></text></g><g><title>app`tokio::runtime::driver::Handle::unpark (6 samples, 0.16%)</title><rect x="99.5114%" y="405" width="0.1629%" height="15" fill="rgb(250,87,22)" fg:x="3666" fg:w="6"/><text x="99.7614%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`kevent (6 samples, 0.16%)</title><rect x="99.5114%" y="389" width="0.1629%" height="15" fill="rgb(239,43,17)" fg:x="3666" fg:w="6"/><text x="99.7614%" y="399.50"></text></g><g><title>app`std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.19%)</title><rect x="99.5114%" y="437" width="0.1900%" height="15" fill="rgb(231,177,25)" fg:x="3666" fg:w="7"/><text x="99.7614%" y="447.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.03%)</title><rect x="99.6743%" y="421" width="0.0271%" height="15" fill="rgb(219,179,1)" fg:x="3672" fg:w="1"/><text x="99.9243%" y="431.50"></text></g><g><title>app`tokio::runtime::task::waker::wake_by_val (8 samples, 0.22%)</title><rect x="99.5114%" y="453" width="0.2172%" height="15" fill="rgb(238,219,53)" fg:x="3666" fg:w="8"/><text x="99.7614%" y="463.50"></text></g><g><title>app`tokio::task::local::CURRENT::__getit (1 samples, 0.03%)</title><rect x="99.7014%" y="437" width="0.0271%" height="15" fill="rgb(232,167,36)" fg:x="3673" fg:w="1"/><text x="99.9514%" y="447.50"></text></g><g><title>app`tokio::runtime::time::wheel::Wheel::next_expiration (2 samples, 0.05%)</title><rect x="99.7828%" y="437" width="0.0543%" height="15" fill="rgb(244,19,51)" fg:x="3676" fg:w="2"/><text x="100.0328%" y="447.50"></text></g><g><title>app`tokio::runtime::time::wheel::level::Level::next_expiration (2 samples, 0.05%)</title><rect x="99.7828%" y="421" width="0.0543%" height="15" fill="rgb(224,6,22)" fg:x="3676" fg:w="2"/><text x="100.0328%" y="431.50"></text></g><g><title>app`tokio::runtime::scheduler::current_thread::Context::park (78 samples, 2.12%)</title><rect x="97.7470%" y="501" width="2.1173%" height="15" fill="rgb(224,145,5)" fg:x="3601" fg:w="78"/><text x="97.9970%" y="511.50">a..</text></g><g><title>app`tokio::runtime::time::Driver::park_internal (69 samples, 1.87%)</title><rect x="97.9913%" y="485" width="1.8730%" height="15" fill="rgb(234,130,49)" fg:x="3610" fg:w="69"/><text x="98.2413%" y="495.50">a..</text></g><g><title>app`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (16 samples, 0.43%)</title><rect x="99.4300%" y="469" width="0.4343%" height="15" fill="rgb(254,6,2)" fg:x="3663" fg:w="16"/><text x="99.6800%" y="479.50"></text></g><g><title>app`tokio::runtime::time::wheel::Wheel::poll (5 samples, 0.14%)</title><rect x="99.7286%" y="453" width="0.1357%" height="15" fill="rgb(208,96,46)" fg:x="3674" fg:w="5"/><text x="99.9786%" y="463.50"></text></g><g><title>app`tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.03%)</title><rect x="99.8371%" y="437" width="0.0271%" height="15" fill="rgb(239,3,39)" fg:x="3678" fg:w="1"/><text x="100.0871%" y="447.50"></text></g><g><title>app`tokio::runtime::runtime::Runtime::block_on (3,668 samples, 99.57%)</title><rect x="0.3257%" y="549" width="99.5657%" height="15" fill="rgb(233,210,1)" fg:x="12" fg:w="3668"/><text x="0.5757%" y="559.50">app`tokio::runtime::runtime::Runtime::block_on</text></g><g><title>app`tokio::runtime::scheduler::current_thread::CurrentThread::block_on (3,668 samples, 99.57%)</title><rect x="0.3257%" y="533" width="99.5657%" height="15" fill="rgb(244,137,37)" fg:x="12" fg:w="3668"/><text x="0.5757%" y="543.50">app`tokio::runtime::scheduler::current_thread::CurrentThread::block_on</text></g><g><title>app`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (3,668 samples, 99.57%)</title><rect x="0.3257%" y="517" width="99.5657%" height="15" fill="rgb(240,136,2)" fg:x="12" fg:w="3668"/><text x="0.5757%" y="527.50">app`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>app`tokio::runtime::scheduler::current_thread::Context::run_task (1 samples, 0.03%)</title><rect x="99.8643%" y="501" width="0.0271%" height="15" fill="rgb(239,18,37)" fg:x="3679" fg:w="1"/><text x="100.1143%" y="511.50"></text></g><g><title>app`tokio::runtime::task::raw::poll (1 samples, 0.03%)</title><rect x="99.8643%" y="485" width="0.0271%" height="15" fill="rgb(218,185,22)" fg:x="3679" fg:w="1"/><text x="100.1143%" y="495.50"></text></g><g><title>app`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.03%)</title><rect x="99.8643%" y="469" width="0.0271%" height="15" fill="rgb(225,218,4)" fg:x="3679" fg:w="1"/><text x="100.1143%" y="479.50"></text></g><g><title>app`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.03%)</title><rect x="99.8643%" y="453" width="0.0271%" height="15" fill="rgb(230,182,32)" fg:x="3679" fg:w="1"/><text x="100.1143%" y="463.50"></text></g><g><title>app`sqlx_core::pool::connection::PoolConnection&lt;DB&gt;::return_to_pool::_{{closure}} (1 samples, 0.03%)</title><rect x="99.8643%" y="437" width="0.0271%" height="15" fill="rgb(242,56,43)" fg:x="3679" fg:w="1"/><text x="100.1143%" y="447.50"></text></g><g><title>app`&lt;sqlx_core::postgres::connection::PgConnection as sqlx_core::connection::Connection&gt;::ping::_{{closure}} (1 samples, 0.03%)</title><rect x="99.8643%" y="421" width="0.0271%" height="15" fill="rgb(233,99,24)" fg:x="3679" fg:w="1"/><text x="100.1143%" y="431.50"></text></g><g><title>app`sqlx_core::postgres::connection::PgConnection::wait_until_ready::_{{closure}} (1 samples, 0.03%)</title><rect x="99.8643%" y="405" width="0.0271%" height="15" fill="rgb(234,209,42)" fg:x="3679" fg:w="1"/><text x="100.1143%" y="415.50"></text></g><g><title>app`sqlx_core::postgres::connection::stream::PgStream::recv::_{{closure}} (1 samples, 0.03%)</title><rect x="99.8643%" y="389" width="0.0271%" height="15" fill="rgb(227,7,12)" fg:x="3679" fg:w="1"/><text x="100.1143%" y="399.50"></text></g><g><title>app`sqlx_core::postgres::connection::stream::PgStream::recv_unchecked::_{{closure}} (1 samples, 0.03%)</title><rect x="99.8643%" y="373" width="0.0271%" height="15" fill="rgb(245,203,43)" fg:x="3679" fg:w="1"/><text x="100.1143%" y="383.50"></text></g><g><title>app`sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read::_{{closure}} (1 samples, 0.03%)</title><rect x="99.8643%" y="357" width="0.0271%" height="15" fill="rgb(238,205,33)" fg:x="3679" fg:w="1"/><text x="100.1143%" y="367.50"></text></g><g><title>app`&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="99.8643%" y="341" width="0.0271%" height="15" fill="rgb(231,56,7)" fg:x="3679" fg:w="1"/><text x="100.1143%" y="351.50"></text></g><g><title>app`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.03%)</title><rect x="99.8643%" y="325" width="0.0271%" height="15" fill="rgb(244,186,29)" fg:x="3679" fg:w="1"/><text x="100.1143%" y="335.50"></text></g><g><title>app`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.03%)</title><rect x="99.8643%" y="309" width="0.0271%" height="15" fill="rgb(234,111,31)" fg:x="3679" fg:w="1"/><text x="100.1143%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (1 samples, 0.03%)</title><rect x="99.8643%" y="293" width="0.0271%" height="15" fill="rgb(241,149,10)" fg:x="3679" fg:w="1"/><text x="100.1143%" y="303.50"></text></g><g><title>libsystem_info.dylib`si_addrinfo (1 samples, 0.03%)</title><rect x="99.8914%" y="437" width="0.0271%" height="15" fill="rgb(249,206,44)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="447.50"></text></g><g><title>libsystem_info.dylib`_gai_sort_list (1 samples, 0.03%)</title><rect x="99.8914%" y="421" width="0.0271%" height="15" fill="rgb(251,153,30)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="431.50"></text></g><g><title>libsystem_c.dylib`_isort (1 samples, 0.03%)</title><rect x="99.8914%" y="405" width="0.0271%" height="15" fill="rgb(239,152,38)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="415.50"></text></g><g><title>libsystem_info.dylib`si_destination_compare (1 samples, 0.03%)</title><rect x="99.8914%" y="389" width="0.0271%" height="15" fill="rgb(249,139,47)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (1 samples, 0.03%)</title><rect x="99.8914%" y="373" width="0.0271%" height="15" fill="rgb(244,64,35)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (1 samples, 0.03%)</title><rect x="99.8914%" y="357" width="0.0271%" height="15" fill="rgb(216,46,15)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (1 samples, 0.03%)</title><rect x="99.8914%" y="341" width="0.0271%" height="15" fill="rgb(250,74,19)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="351.50"></text></g><g><title>libsystem_info.dylib`si_destination_compare_init_once (1 samples, 0.03%)</title><rect x="99.8914%" y="325" width="0.0271%" height="15" fill="rgb(249,42,33)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="335.50"></text></g><g><title>libsystem_trace.dylib`os_log_create (1 samples, 0.03%)</title><rect x="99.8914%" y="309" width="0.0271%" height="15" fill="rgb(242,149,17)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="319.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="99.8914%" y="293" width="0.0271%" height="15" fill="rgb(244,29,21)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="303.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="99.8914%" y="277" width="0.0271%" height="15" fill="rgb(220,130,37)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="287.50"></text></g><g><title>libsystem_trace.dylib`_os_trace_init_slow (1 samples, 0.03%)</title><rect x="99.8914%" y="261" width="0.0271%" height="15" fill="rgb(211,67,2)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="271.50"></text></g><g><title>libxpc.dylib`xpc_bundle_get_info_dictionary (1 samples, 0.03%)</title><rect x="99.8914%" y="245" width="0.0271%" height="15" fill="rgb(235,68,52)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="255.50"></text></g><g><title>libxpc.dylib`_xpc_bundle_resolve (1 samples, 0.03%)</title><rect x="99.8914%" y="229" width="0.0271%" height="15" fill="rgb(246,142,3)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="239.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="99.8914%" y="213" width="0.0271%" height="15" fill="rgb(241,25,7)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="223.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="99.8914%" y="197" width="0.0271%" height="15" fill="rgb(242,119,39)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="207.50"></text></g><g><title>libxpc.dylib`___xpc_bundle_resolve_block_invoke (1 samples, 0.03%)</title><rect x="99.8914%" y="181" width="0.0271%" height="15" fill="rgb(241,98,45)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="191.50"></text></g><g><title>libxpc.dylib`_xpc_bundle_resolve_sync (1 samples, 0.03%)</title><rect x="99.8914%" y="165" width="0.0271%" height="15" fill="rgb(254,28,30)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="175.50"></text></g><g><title>libxpc.dylib`_xpc_bundle_resolve_root (1 samples, 0.03%)</title><rect x="99.8914%" y="149" width="0.0271%" height="15" fill="rgb(241,142,54)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="159.50"></text></g><g><title>libxpc.dylib`_resolve_and_stat_path (1 samples, 0.03%)</title><rect x="99.8914%" y="133" width="0.0271%" height="15" fill="rgb(222,85,15)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.03%)</title><rect x="99.8914%" y="117" width="0.0271%" height="15" fill="rgb(210,85,47)" fg:x="3680" fg:w="1"/><text x="100.1414%" y="127.50"></text></g><g><title>app`&lt;(&amp;str,u16) as std::net::socket_addr::ToSocketAddrs&gt;::to_socket_addrs (2 samples, 0.05%)</title><rect x="99.8914%" y="485" width="0.0543%" height="15" fill="rgb(224,206,25)" fg:x="3680" fg:w="2"/><text x="100.1414%" y="495.50"></text></g><g><title>app`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from::_{{closure}} (2 samples, 0.05%)</title><rect x="99.8914%" y="469" width="0.0543%" height="15" fill="rgb(243,201,19)" fg:x="3680" fg:w="2"/><text x="100.1414%" y="479.50"></text></g><g><title>libsystem_info.dylib`getaddrinfo (2 samples, 0.05%)</title><rect x="99.8914%" y="453" width="0.0543%" height="15" fill="rgb(236,59,4)" fg:x="3680" fg:w="2"/><text x="100.1414%" y="463.50"></text></g><g><title>libsystem_info.dylib`si_module_with_name (1 samples, 0.03%)</title><rect x="99.9186%" y="437" width="0.0271%" height="15" fill="rgb(254,179,45)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="447.50"></text></g><g><title>libsystem_info.dylib`si_module_static_search (1 samples, 0.03%)</title><rect x="99.9186%" y="421" width="0.0271%" height="15" fill="rgb(226,14,10)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="99.9186%" y="405" width="0.0271%" height="15" fill="rgb(244,27,41)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="99.9186%" y="389" width="0.0271%" height="15" fill="rgb(235,35,32)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="399.50"></text></g><g><title>libsystem_info.dylib`__si_module_static_search_block_invoke (1 samples, 0.03%)</title><rect x="99.9186%" y="373" width="0.0271%" height="15" fill="rgb(218,68,31)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="383.50"></text></g><g><title>libsystem_info.dylib`si_module_config_modules_for_category (1 samples, 0.03%)</title><rect x="99.9186%" y="357" width="0.0271%" height="15" fill="rgb(207,120,37)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="367.50"></text></g><g><title>libsystem_info.dylib`si_module_with_name (1 samples, 0.03%)</title><rect x="99.9186%" y="341" width="0.0271%" height="15" fill="rgb(227,98,0)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="351.50"></text></g><g><title>libsystem_info.dylib`si_module_static_ds (1 samples, 0.03%)</title><rect x="99.9186%" y="325" width="0.0271%" height="15" fill="rgb(207,7,3)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="335.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="99.9186%" y="309" width="0.0271%" height="15" fill="rgb(206,98,19)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="319.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="99.9186%" y="293" width="0.0271%" height="15" fill="rgb(217,5,26)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="303.50"></text></g><g><title>libsystem_info.dylib`__si_module_static_ds_block_invoke (1 samples, 0.03%)</title><rect x="99.9186%" y="277" width="0.0271%" height="15" fill="rgb(235,190,38)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="287.50"></text></g><g><title>libsystem_notify.dylib`notify_register_check (1 samples, 0.03%)</title><rect x="99.9186%" y="261" width="0.0271%" height="15" fill="rgb(247,86,24)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="271.50"></text></g><g><title>libsystem_notify.dylib`0x000000019949a34c (1 samples, 0.03%)</title><rect x="99.9186%" y="245" width="0.0271%" height="15" fill="rgb(205,101,16)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="255.50"></text></g><g><title>libsystem_notify.dylib`0x000000019949ba88 (1 samples, 0.03%)</title><rect x="99.9186%" y="229" width="0.0271%" height="15" fill="rgb(246,168,33)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="239.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="99.9186%" y="213" width="0.0271%" height="15" fill="rgb(231,114,1)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="223.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="99.9186%" y="197" width="0.0271%" height="15" fill="rgb(207,184,53)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="207.50"></text></g><g><title>libsystem_notify.dylib`0x000000019949c6f4 (1 samples, 0.03%)</title><rect x="99.9186%" y="181" width="0.0271%" height="15" fill="rgb(224,95,51)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="191.50"></text></g><g><title>libxpc.dylib`bootstrap_look_up2 (1 samples, 0.03%)</title><rect x="99.9186%" y="165" width="0.0271%" height="15" fill="rgb(212,188,45)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="175.50"></text></g><g><title>libxpc.dylib`bootstrap_look_up3 (1 samples, 0.03%)</title><rect x="99.9186%" y="149" width="0.0271%" height="15" fill="rgb(223,154,38)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="159.50"></text></g><g><title>libxpc.dylib`_xpc_interface_routine (1 samples, 0.03%)</title><rect x="99.9186%" y="133" width="0.0271%" height="15" fill="rgb(251,22,52)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="143.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_routine (1 samples, 0.03%)</title><rect x="99.9186%" y="117" width="0.0271%" height="15" fill="rgb(229,209,22)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="127.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_mach_msg (1 samples, 0.03%)</title><rect x="99.9186%" y="101" width="0.0271%" height="15" fill="rgb(234,138,34)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (1 samples, 0.03%)</title><rect x="99.9186%" y="85" width="0.0271%" height="15" fill="rgb(212,95,11)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (1 samples, 0.03%)</title><rect x="99.9186%" y="69" width="0.0271%" height="15" fill="rgb(240,179,47)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.03%)</title><rect x="99.9186%" y="53" width="0.0271%" height="15" fill="rgb(240,163,11)" fg:x="3681" fg:w="1"/><text x="100.1686%" y="63.50"></text></g><g><title>libsystem_dnssd.dylib`DNSServiceProcessResult (1 samples, 0.03%)</title><rect x="99.9457%" y="357" width="0.0271%" height="15" fill="rgb(236,37,12)" fg:x="3682" fg:w="1"/><text x="100.1957%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom_nocancel (1 samples, 0.03%)</title><rect x="99.9457%" y="341" width="0.0271%" height="15" fill="rgb(232,164,16)" fg:x="3682" fg:w="1"/><text x="100.1957%" y="351.50"></text></g><g><title>all (3,684 samples, 100%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(244,205,15)" fg:x="0" fg:w="3684"/><text x="0.2500%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (3,673 samples, 99.70%)</title><rect x="0.2986%" y="629" width="99.7014%" height="15" fill="rgb(223,117,47)" fg:x="11" fg:w="3673"/><text x="0.5486%" y="639.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (3,673 samples, 99.70%)</title><rect x="0.2986%" y="613" width="99.7014%" height="15" fill="rgb(244,107,35)" fg:x="11" fg:w="3673"/><text x="0.5486%" y="623.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>app`std::sys::unix::thread::Thread::new::thread_start (3,673 samples, 99.70%)</title><rect x="0.2986%" y="597" width="99.7014%" height="15" fill="rgb(205,140,8)" fg:x="11" fg:w="3673"/><text x="0.5486%" y="607.50">app`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>app`core::ops::function::FnOnce::call_once{{vtable.shim}} (3,673 samples, 99.70%)</title><rect x="0.2986%" y="581" width="99.7014%" height="15" fill="rgb(228,84,46)" fg:x="11" fg:w="3673"/><text x="0.5486%" y="591.50">app`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>app`std::sys_common::backtrace::__rust_begin_short_backtrace (3,672 samples, 99.67%)</title><rect x="0.3257%" y="565" width="99.6743%" height="15" fill="rgb(254,188,9)" fg:x="12" fg:w="3672"/><text x="0.5757%" y="575.50">app`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>app`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4 samples, 0.11%)</title><rect x="99.8914%" y="549" width="0.1086%" height="15" fill="rgb(206,112,54)" fg:x="3680" fg:w="4"/><text x="100.1414%" y="559.50"></text></g><g><title>app`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (4 samples, 0.11%)</title><rect x="99.8914%" y="533" width="0.1086%" height="15" fill="rgb(216,84,49)" fg:x="3680" fg:w="4"/><text x="100.1414%" y="543.50"></text></g><g><title>app`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4 samples, 0.11%)</title><rect x="99.8914%" y="517" width="0.1086%" height="15" fill="rgb(214,194,35)" fg:x="3680" fg:w="4"/><text x="100.1414%" y="527.50"></text></g><g><title>app`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.11%)</title><rect x="99.8914%" y="501" width="0.1086%" height="15" fill="rgb(249,28,3)" fg:x="3680" fg:w="4"/><text x="100.1414%" y="511.50"></text></g><g><title>app`&lt;str as std::net::socket_addr::ToSocketAddrs&gt;::to_socket_addrs (2 samples, 0.05%)</title><rect x="99.9457%" y="485" width="0.0543%" height="15" fill="rgb(222,56,52)" fg:x="3682" fg:w="2"/><text x="100.1957%" y="495.50"></text></g><g><title>app`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (2 samples, 0.05%)</title><rect x="99.9457%" y="469" width="0.0543%" height="15" fill="rgb(245,217,50)" fg:x="3682" fg:w="2"/><text x="100.1957%" y="479.50"></text></g><g><title>app`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from::_{{closure}} (2 samples, 0.05%)</title><rect x="99.9457%" y="453" width="0.0543%" height="15" fill="rgb(213,201,24)" fg:x="3682" fg:w="2"/><text x="100.1957%" y="463.50"></text></g><g><title>libsystem_info.dylib`getaddrinfo (2 samples, 0.05%)</title><rect x="99.9457%" y="437" width="0.0543%" height="15" fill="rgb(248,116,28)" fg:x="3682" fg:w="2"/><text x="100.1957%" y="447.50"></text></g><g><title>libsystem_info.dylib`si_addrinfo (2 samples, 0.05%)</title><rect x="99.9457%" y="421" width="0.0543%" height="15" fill="rgb(219,72,43)" fg:x="3682" fg:w="2"/><text x="100.1957%" y="431.50"></text></g><g><title>libsystem_info.dylib`search_addrinfo (2 samples, 0.05%)</title><rect x="99.9457%" y="405" width="0.0543%" height="15" fill="rgb(209,138,14)" fg:x="3682" fg:w="2"/><text x="100.1957%" y="415.50"></text></g><g><title>libsystem_info.dylib`mdns_addrinfo (2 samples, 0.05%)</title><rect x="99.9457%" y="389" width="0.0543%" height="15" fill="rgb(222,18,33)" fg:x="3682" fg:w="2"/><text x="100.1957%" y="399.50"></text></g><g><title>libsystem_info.dylib`_mdns_search_ex (2 samples, 0.05%)</title><rect x="99.9457%" y="373" width="0.0543%" height="15" fill="rgb(213,199,7)" fg:x="3682" fg:w="2"/><text x="100.1957%" y="383.50"></text></g><g><title>libsystem_info.dylib`_mdns_query_start (1 samples, 0.03%)</title><rect x="99.9729%" y="357" width="0.0271%" height="15" fill="rgb(250,110,10)" fg:x="3683" fg:w="1"/><text x="100.2229%" y="367.50"></text></g><g><title>libsystem_dnssd.dylib`DNSServiceQueryRecordInternal (1 samples, 0.03%)</title><rect x="99.9729%" y="341" width="0.0271%" height="15" fill="rgb(248,123,6)" fg:x="3683" fg:w="1"/><text x="100.2229%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (1 samples, 0.03%)</title><rect x="99.9729%" y="325" width="0.0271%" height="15" fill="rgb(206,91,31)" fg:x="3683" fg:w="1"/><text x="100.2229%" y="335.50"></text></g></svg></svg>